/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImportExportFrame.java
 *
 * Created on Jun 22, 2010, 3:06:55 PM
 */
package rmischedule.importexportData;

import rmischeduleserver.control.model.BoundMappings;
import java.awt.Desktop;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.apache.poi.xssf.usermodel.*;
import org.apache.poi.ss.usermodel.IndexedColors;
import schedfoxlib.model.Company;
import rmischedule.main.Main_Window;
import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import rmischedule.data_connection.Connection;
import rmischeduleserver.control.model.ClientDBMapper;
import rmischedule.importexportData.client.ViewResultsClientInsertFrame;
import schedfoxlib.model.Client;

/**
 *
 * @author jchinta
 */
public class ImportExportClientFrame extends javax.swing.JInternalFrame {

    private String db;
    private String branchId;
    Connection myConn = new Connection();

    public ImportExportClientFrame(Company co, String branchId) {
        initComponents();
        this.db = co.getDB();
        this.branchId = branchId;
        this.myConn.setBranch(branchId);
        this.myConn.setCompany(co.getId());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        downloadLocationBtn = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        importLocationBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setClosable(true);
        setForeground(new java.awt.Color(153, 153, 153));
        setMaximizable(true);
        setResizable(true);
        setVisible(true);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel9.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel9.setOpaque(false);
        jPanel9.setLayout(new java.awt.GridLayout(1, 0));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14));
        jLabel3.setForeground(new java.awt.Color(0, 51, 153));
        jLabel3.setText("Step One: Download Templates (Optional)");
        jPanel9.add(jLabel3);

        getContentPane().add(jPanel9);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        jPanel2.setOpaque(false);
        jPanel2.setLayout(new java.awt.GridLayout(0, 1));

        jPanel3.setEnabled(false);
        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(3);
        jTextArea1.setText("If you are unsure how to import data into Schedfox start here. This will generate a file for you to show you what columns Schedfox expects in the import file. Use this template to get started and then use the Import section below to import in this data.");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setOpaque(false);
        jPanel3.add(jTextArea1);

        jPanel2.add(jPanel3);

        jPanel4.setOpaque(false);
        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel9.setFont(new java.awt.Font("Vani", 1, 12));
        jLabel9.setText("Download Location Template");
        jLabel9.setMaximumSize(new java.awt.Dimension(250, 20));
        jLabel9.setMinimumSize(new java.awt.Dimension(250, 20));
        jLabel9.setPreferredSize(new java.awt.Dimension(250, 20));
        jPanel4.add(jLabel9);

        downloadLocationBtn.setFont(new java.awt.Font("Tahoma", 1, 12));
        downloadLocationBtn.setText("Save To:");
        downloadLocationBtn.setToolTipText("Browse for the Client excel sheet");
        downloadLocationBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        downloadLocationBtn.setMaximumSize(new java.awt.Dimension(70, 24));
        downloadLocationBtn.setMinimumSize(new java.awt.Dimension(70, 24));
        downloadLocationBtn.setPreferredSize(new java.awt.Dimension(70, 24));
        downloadLocationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadLocationBtnActionPerformed(evt);
            }
        });
        jPanel4.add(downloadLocationBtn);

        jPanel2.add(jPanel4);

        getContentPane().add(jPanel2);

        jPanel10.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel10.setOpaque(false);
        jPanel10.setLayout(new java.awt.GridLayout(1, 0));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14));
        jLabel4.setForeground(new java.awt.Color(0, 51, 153));
        jLabel4.setText("Step Two: Import Data");
        jPanel10.add(jLabel4);

        getContentPane().add(jPanel10);

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.GridLayout(0, 1));

        jPanel6.setOpaque(false);

        jTextArea2.setColumns(20);
        jTextArea2.setEditable(false);
        jTextArea2.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(3);
        jTextArea2.setText("Once you have set up your files in a manner consitent with the templates above (Excel files). You may import using the buttons below. Simply click on the approprate button, choose your file and Schedfox will walk you through the process of importing your data into this system.");
        jTextArea2.setWrapStyleWord(true);
        jTextArea2.setOpaque(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 412, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTextArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 11, Short.MAX_VALUE)
                    .addComponent(jTextArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 10, Short.MAX_VALUE)))
        );

        jPanel1.add(jPanel6);

        jPanel7.setOpaque(false);
        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel2.setFont(new java.awt.Font("Vani", 1, 12));
        jLabel2.setText("Import Location Data");
        jLabel2.setMaximumSize(new java.awt.Dimension(250, 20));
        jLabel2.setMinimumSize(new java.awt.Dimension(250, 20));
        jLabel2.setPreferredSize(new java.awt.Dimension(250, 20));
        jPanel7.add(jLabel2);

        importLocationBtn.setFont(new java.awt.Font("Tahoma", 1, 12));
        importLocationBtn.setText("Browse");
        importLocationBtn.setToolTipText("Browse for the Client excel sheet");
        importLocationBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        importLocationBtn.setMaximumSize(new java.awt.Dimension(70, 24));
        importLocationBtn.setMinimumSize(new java.awt.Dimension(70, 24));
        importLocationBtn.setPreferredSize(new java.awt.Dimension(70, 24));
        importLocationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importLocationBtnActionPerformed(evt);
            }
        });
        jPanel7.add(importLocationBtn);

        jPanel1.add(jPanel7);

        getContentPane().add(jPanel1);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-433)/2, (screenSize.height-329)/2, 433, 329);
    }// </editor-fold>//GEN-END:initComponents

    private void importLocationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importLocationBtnActionPerformed
        JFileChooser jf = new JFileChooser();
        int returnVal = jf.showOpenDialog(importLocationBtn);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jf.getSelectedFile();
            try {
                ImportFileReader fileImporter = new ImportFileReader(file.getPath(), this.myConn);
                fileImporter.processFile();

                ClientDBMapper mapper = new ClientDBMapper(fileImporter.getColumnHeaders(), fileImporter.getFileData(), this.myConn.getServer(), this.myConn.myBranch);
                Vector<String> unrecognizedNames = mapper.findUnrecognizedColumnNames();
                Vector<String> nonUsedColumns = mapper.getUnusedColumnNames();
                if (unrecognizedNames.size() > 0) {
                    MapExportFieldsDialog mapFieldsDialog = new MapExportFieldsDialog(null, true, unrecognizedNames, nonUsedColumns);
                    mapFieldsDialog.setVisible(true);
                    if (mapFieldsDialog.isNextWasPressed()) {
                        Vector<BoundMappings> myBoundMappings = mapFieldsDialog.getBoundMappings();
                        mapper.setBoundMappings(myBoundMappings);
                        mapper.processImport();
                    }
                } else {
                    mapper.processImport();
                }
                ArrayList<Client> errorEmployees = mapper.getErrorClients();
                ArrayList<Client> insertedEmployees = mapper.getInsertedClients();
                ArrayList<Client> updateEmployees = mapper.getUpdatedClients();
                if (errorEmployees.size() + insertedEmployees.size() + updateEmployees.size() > 0) {
                    ViewResultsClientInsertFrame myResultsFrame = new ViewResultsClientInsertFrame(insertedEmployees, updateEmployees, errorEmployees);
                    Main_Window.parentOfApplication.desktop.add(myResultsFrame);
                    myResultsFrame.setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(Main_Window.parentOfApplication, "This file could not be read, or it appears to be empty. \r\n" +
                            "Please verify that it is a valid Excel file and that it does have data. \r\nIf this problem continues contact Schedfox.",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(Main_Window.parentOfApplication, "There was a problem reading the file provided. \r\n" +
                        "Please verify that it is a valid Excel file and that it does have data. \r\nIf this problem continues contact Schedfox.\r\n" +
                        "Error: " + ex.toString(),
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
}//GEN-LAST:event_importLocationBtnActionPerformed

    private void downloadLocationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadLocationBtnActionPerformed
        ClientDBMapper mapper = new ClientDBMapper(this.myConn.getServer(), this.myConn.myCompany, this.myConn.myBranch);

        try {
            File tempFile = File.createTempFile("tempClient", ".xlsx");
            tempFile.createNewFile();
            this.exportExcelTemplate(tempFile.getAbsolutePath(), mapper.getColumnNames());
            JOptionPane.showMessageDialog(Main_Window.parentOfApplication,
                    "Template has been exported!", "Export Successful", JOptionPane.OK_OPTION);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(Main_Window.parentOfApplication,
                    "Problem exporting template!\r\nError: " + ex.toString(), "Export Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(Main_Window.parentOfApplication,
                    "Problem exporting template!\r\nError: " + ex.toString(), "Export Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_downloadLocationBtnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton downloadLocationBtn;
    private javax.swing.JButton importLocationBtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables

    private void exportExcelTemplate(String filename, ArrayList<String> columns) throws FileNotFoundException, IOException {
        XSSFWorkbook wb = new XSSFWorkbook();
        XSSFCellStyle rowstyle1 = wb.createCellStyle();
        XSSFFont frows = wb.createFont();

        frows.setFontHeight(7);
        frows.setColor(IndexedColors.DARK_GREEN.getIndex());

        rowstyle1.setFont(frows);
        rowstyle1.setWrapText(true);
        rowstyle1.setAlignment(XSSFCellStyle.ALIGN_LEFT);
        XSSFSheet st = wb.createSheet("1");
        XSSFRow firstrow = st.createRow(0);
        firstrow.setHeightInPoints(35);
        XSSFCell columnames = null;
        for (int j = 0; j < columns.size(); j++) {
            columnames = firstrow.createCell(j);
            firstrow.getCell(j).setCellValue(columns.get(j));
        }
        FileOutputStream out = new FileOutputStream(filename);
        wb.write(out);
        out.flush();
        out.close();

        File myFile = new File(filename);
        Desktop.getDesktop().edit(myFile);
    }
}
