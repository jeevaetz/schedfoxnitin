/*
 * SendMessageDialog.java
 *
 * Created on February 15, 2005, 8:03 AM
 */

package rmischedule.admin;
import rmischedule.data_connection.Connection;
import javax.swing.*;
import java.awt.*;
import java.util.*;
/**
 *
 * @author  ira
 */
public class SendMessageDialog extends javax.swing.JDialog {
    
    private String[] UserIDs;
    private Connection MyConn;
    private Component Parent;
    private String Sender;
    private String SenderId;
    
    /** Creates new form SendMessageDialog */
    public SendMessageDialog(java.awt.Frame parent, boolean modal, String[] userIDs, Connection myConn, String senderLogin, String senderId) {
        super(parent, modal);
        initComponents();
        MyConn = myConn;
        Parent = (Component)parent;
        UserIDs = userIDs;
        Sender = senderLogin;
        SenderId = senderId;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        TextToSend = new javax.swing.JTextArea();
        CommandPanel = new javax.swing.JPanel();
        CancelButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        OkButton = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 0, 10));
        TextToSend.setLineWrap(true);
        TextToSend.setWrapStyleWord(true);
        jPanel1.add(TextToSend);

        CommandPanel.setLayout(new javax.swing.BoxLayout(CommandPanel, javax.swing.BoxLayout.X_AXIS));

        CommandPanel.setMaximumSize(new java.awt.Dimension(32767, 30));
        CommandPanel.setMinimumSize(new java.awt.Dimension(10, 30));
        CommandPanel.setPreferredSize(new java.awt.Dimension(10, 30));
        CancelButton.setText("Cancel");
        CancelButton.setMaximumSize(new java.awt.Dimension(85, 23));
        CancelButton.setMinimumSize(new java.awt.Dimension(85, 23));
        CancelButton.setPreferredSize(new java.awt.Dimension(85, 23));
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        CommandPanel.add(CancelButton);

        CommandPanel.add(jPanel2);

        OkButton.setText("Send");
        OkButton.setMaximumSize(new java.awt.Dimension(85, 23));
        OkButton.setMinimumSize(new java.awt.Dimension(85, 23));
        OkButton.setPreferredSize(new java.awt.Dimension(85, 23));
        OkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkButtonActionPerformed(evt);
            }
        });

        CommandPanel.add(OkButton);

        jPanel1.add(CommandPanel);

        getContentPane().add(jPanel1);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-400)/2, (screenSize.height-300)/2, 400, 300);
    }// </editor-fold>//GEN-END:initComponents

    private void OkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkButtonActionPerformed
        try {
            for(int i = 0; i < UserIDs.length; i++) {
                if(!UserIDs[i].equals(SenderId)) {
                    StringTokenizer tokenizer = new StringTokenizer(TextToSend.getText(), " ");
                    StringBuilder   builder   = new StringBuilder();
                    int curIndex = 0;
                    
                    while(tokenizer.hasMoreTokens()) {
                        String token = tokenizer.nextToken();
                        builder.append(token);                        
                        curIndex += token.length();
                        
                        if  (curIndex > 60) { curIndex = 0; builder.append("\n"); }
                        else                { builder.append(" "); }
                    }                  
                    MyConn.sendMessage("Message From " + Sender + ":\n" + builder.toString(), UserIDs[i]);
                }
            }
            JOptionPane.showMessageDialog(Parent, "Message Sent!", "Message Sent", JOptionPane.OK_OPTION);
        } catch (Exception e) { JOptionPane.showMessageDialog(Parent, "Unable to send message!\n", "Error!", JOptionPane.ERROR_MESSAGE); }
        finally { this.dispose(); }
    }//GEN-LAST:event_OkButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        this.dispose(); 
    }//GEN-LAST:event_CancelButtonActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JPanel CommandPanel;
    private javax.swing.JButton OkButton;
    private javax.swing.JTextArea TextToSend;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
    
}
