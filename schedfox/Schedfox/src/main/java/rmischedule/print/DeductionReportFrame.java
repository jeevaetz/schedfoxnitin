/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DeductionReportFrame.java
 *
 * Created on May 24, 2011, 5:05:18 PM
 */
package rmischedule.print;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.Hashtable;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import rmischedule.billing.EmployeeDeductionTypeModel;
import rmischedule.data_connection.Connection;
import rmischedule.ireports.viewer.IReportViewer;
import schedfoxlib.model.Company;
import rmischedule.main.Main_Window;
import rmischeduleserver.RMIScheduleServerImpl;
import rmischeduleserver.control.BillingController;
import schedfoxlib.model.EmployeeDeductionTypes;

/**
 *
 * @author user
 */
public class DeductionReportFrame extends javax.swing.JInternalFrame {

    private String companyId;
    private EmployeeDeductionTypeModel employeeDeductionModel = new EmployeeDeductionTypeModel();

    /** Creates new form DeductionReportFrame */
    public DeductionReportFrame(String companyId) {
        initComponents();

        this.companyId = companyId;

        try {
            BillingController billingController = BillingController.getInstance(this.companyId);
            ArrayList<EmployeeDeductionTypes> billingTypes = billingController.getEmployeeDeductionTypes();
            for (int d = 0; d < billingTypes.size(); d++) {
                employeeDeductionModel.addItem(billingTypes.get(d));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numWeeks = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        deductionTypeCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        printBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        mailLabelChk = new javax.swing.JCheckBox();

        numWeeks.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel1.setText("Number of weeks to look back");

        deductionTypeCombo.setModel(employeeDeductionModel);

        jLabel2.setText("Deduction Type");

        printBtn.setText("View");
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });

        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        mailLabelChk.setText("Print Mailing Labels");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                        .addComponent(printBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deductionTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(numWeeks, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(mailLabelChk, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numWeeks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deductionTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(mailLabelChk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(printBtn)
                    .addComponent(closeBtn))
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-331)/2, (screenSize.height-200)/2, 331, 200);
    }// </editor-fold>//GEN-END:initComponents

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeBtnActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
        EmployeeDeductionTypes selType = (EmployeeDeductionTypes) employeeDeductionModel.getSelectedItem();
        Integer val = (Integer) numWeeks.getValue();

        try {
            Company myCompany = Main_Window.parentOfApplication.getCompanyById(this.companyId);
            InputStream reportStream =
                    getClass().getResourceAsStream("/rmischedule/ireports/open_deduction_report.jasper");

            Connection myConn = new Connection();
            myConn.myCompany = this.companyId;

            Hashtable parameters = new Hashtable();
            parameters.put("schema", myCompany.getDB());
            parameters.put("deduction_type", selType.getEmployeeDeductionTypeId());
            parameters.put("weeks_back", val);
            parameters.put("ded_type", selType.getDescription());

            java.sql.Connection myConnect = RMIScheduleServerImpl.getConnection().generateConnection();
            JasperPrint report = JasperFillManager.fillReport(reportStream, parameters, myConnect);

            IReportViewer viewer = new IReportViewer(report);
            Main_Window.parentOfApplication.desktop.add(viewer);
            viewer.showForm();

            if (mailLabelChk.isSelected()) {
                InputStream reportMailingStream =
                    getClass().getResourceAsStream("/rmischedule/ireports/mailing_labels.jasper");
                JasperPrint reportMailing = JasperFillManager.fillReport(reportMailingStream, parameters, myConnect);
                IReportViewer viewerReport = new IReportViewer(reportMailing);
                Main_Window.parentOfApplication.desktop.add(viewerReport);
                viewerReport.showForm();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_printBtnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeBtn;
    private javax.swing.JComboBox deductionTypeCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JCheckBox mailLabelChk;
    private javax.swing.JSpinner numWeeks;
    private javax.swing.JButton printBtn;
    // End of variables declaration//GEN-END:variables
}
