/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Messaging_Sort_Parameters.java
 *
 * Created on Jul 4, 2010, 4:38:17 PM
 */
//  package declarations
package rmischedule.messaging.components;

//  import declarations
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.event.ListDataListener;
import rmischedule.employee.data_components.EmployeeType;
import rmischedule.main.Main_Window;
import rmischedule.schedule.components.availability.Messaging_Availability;
import schedfoxlib.model.util.Record_Set;
import rmischeduleserver.mysqlconnectivity.queries.schedule_data.get_all_employee_types_query;

/**
 *
 * @author jdavis
 */
public class MessagingFiltersWindow extends javax.swing.JInternalFrame {
    //  private variable declarations

    private Vector<EmployeeType> empTypes;
    private EmpTypeComboModel empComboModel;
    private MessagingSubForm myParentForm;

    /** Creates new form Messaging_Sort_Parameters */
    public MessagingFiltersWindow(MessagingSubForm tempMyParentForm) {
        this.myParentForm = tempMyParentForm;
        empTypes = this.getAllEmployeeTypes();
        empComboModel = new EmpTypeComboModel();
        //  initialize Java swing
        initComponents();

        setTitle("Search Filters");
    }

    public Vector<EmployeeType> getAllEmployeeTypes() {
        Vector<EmployeeType> retVal = new Vector<EmployeeType>();

        get_all_employee_types_query typeQuery = new get_all_employee_types_query();
        Record_Set rst = myParentForm.getMyConnection().executeQuery(typeQuery);

        EmployeeType noFilter = new EmployeeType();
        noFilter.setEmployeeType("Don't Filter");
        noFilter.setEmployeeTypeId(-1);
        retVal.add(noFilter);

        for (int r = 0; r < rst.length(); r++) {
            retVal.add(new EmployeeType(rst));
            rst.moveNext();
        }

        return retVal;
    }

    /**
     *  Method Name:  reset
     *  Purpose of Method:  resets all portions of the form
     *  Arguments:  none
     *  Returns:  void
     *  Preconditions:  form must be reste
     *  Postconditions:  form reset graphically, data as well
     */
    public void reset() {
        //  reset combo boxes to initial values
        typeComboBox.setSelectedIndex(0);
        trainedComboBox.setSelectedIndex(0);
        newemployeeComboBox.setSelectedIndex(0);
    }

    // getter and setters implementation
    public void setParentForm(MessagingSubForm tempMyParentForm) {
        this.myParentForm = tempMyParentForm;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filterPanel = new javax.swing.JPanel();
        armedLabel = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox();
        trainedLabel = new javax.swing.JLabel();
        trainedComboBox = new javax.swing.JComboBox();
        newemployeeLabel = new javax.swing.JLabel();
        newemployeeComboBox = new javax.swing.JComboBox();
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setForeground(java.awt.Color.white);
        setPreferredSize(new java.awt.Dimension(180, 55));

        armedLabel.setText("Employee Type");

        typeComboBox.setModel(empComboModel);
        typeComboBox.setMinimumSize(new java.awt.Dimension(23, 22));
        typeComboBox.setPreferredSize(new java.awt.Dimension(28, 22));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });

        trainedLabel.setText("Trained");

        trainedComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Don't Filter", "Trained" }));
        trainedComboBox.setMinimumSize(new java.awt.Dimension(72, 22));
        trainedComboBox.setPreferredSize(new java.awt.Dimension(77, 22));
        trainedComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainedComboBoxActionPerformed(evt);
            }
        });

        newemployeeLabel.setText("New Employee");

        newemployeeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No", "Yes", " " }));
        newemployeeComboBox.setMinimumSize(new java.awt.Dimension(37, 22));
        newemployeeComboBox.setPreferredSize(new java.awt.Dimension(42, 22));

        javax.swing.GroupLayout filterPanelLayout = new javax.swing.GroupLayout(filterPanel);
        filterPanel.setLayout(filterPanelLayout);
        filterPanelLayout.setHorizontalGroup(
            filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(trainedLabel)
                    .addComponent(newemployeeLabel)
                    .addComponent(armedLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(typeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(trainedComboBox, 0, 238, Short.MAX_VALUE)
                    .addComponent(newemployeeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        filterPanelLayout.setVerticalGroup(
            filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(armedLabel))
                .addGap(18, 18, 18)
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainedLabel)
                    .addComponent(trainedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newemployeeLabel)
                    .addComponent(newemployeeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        getContentPane().add(filterPanel, java.awt.BorderLayout.CENTER);

        okButton.setText("OK");
        okButton.setMaximumSize(new java.awt.Dimension(47, 25));
        okButton.setMinimumSize(new java.awt.Dimension(47, 25));
        okButton.setPreferredSize(new java.awt.Dimension(47, 25));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.setMaximumSize(new java.awt.Dimension(65, 25));
        cancelButton.setMinimumSize(new java.awt.Dimension(65, 25));
        cancelButton.setPreferredSize(new java.awt.Dimension(65, 25));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(178, 178, 178)
                .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(59, 59, 59))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        getContentPane().add(buttonPanel, java.awt.BorderLayout.PAGE_END);

        setBounds(0, 0, 428, 350);
    }// </editor-fold>//GEN-END:initComponents

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeComboBoxActionPerformed

    private void trainedComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainedComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trainedComboBoxActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        //  reset GUI in parent form
        myParentForm.cancelPressed();

        //  reset GUI and data in this form
        reset();
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        reset();
        this.setVisible(false);
        //  tell messaging window proces completed
        myParentForm.okPressed();
    }//GEN-LAST:event_okButtonActionPerformed

    private class EmpTypeComboModel implements ComboBoxModel {

        private int selectedIndex;

        public EmpTypeComboModel() {
        }

        public void setSelectedItem(Object anItem) {
            if (anItem instanceof EmployeeType) {
                EmployeeType empType = (EmployeeType) anItem;
                for (int i = 0; i < empTypes.size(); i++) {
                    if (empTypes.get(i).getEmployeeTypeId() == empType.getEmployeeTypeId()) {
                        selectedIndex = i;
                    }
                }
            }
        }

        public EmployeeType getEmployeeType() {
            return empTypes.get(selectedIndex);
        }

        public Object getSelectedItem() {
            return empTypes.get(selectedIndex);
        }

        public int getSize() {
            return empTypes.size();
        }

        public Object getElementAt(int index) {
            if (index < empTypes.size()) {
                return empTypes.get(index);
            }
            return new EmployeeType();
        }

        public void addListDataListener(ListDataListener l) {
        }

        public void removeListDataListener(ListDataListener l) {
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel armedLabel;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JComboBox newemployeeComboBox;
    private javax.swing.JLabel newemployeeLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox trainedComboBox;
    private javax.swing.JLabel trainedLabel;
    private javax.swing.JComboBox typeComboBox;
    // End of variables declaration//GEN-END:variables
}
