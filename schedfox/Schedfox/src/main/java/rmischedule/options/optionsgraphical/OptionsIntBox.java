/*
 * OptionsIntBox.java
 *
 * Created on November 9, 2004, 8:12 AM
 */

package rmischedule.options.optionsgraphical;

import rmischedule.components.Options;
import rmischedule.options.optiontypeclasses.*;
import java.awt.event.*;
/**
 *
 * @author  ira
 */
public class OptionsIntBox extends javax.swing.JPanel {
    
    IntegerOptionClass options;
    boolean isInt;
    int access;
    
    /** Creates new form OptionsIntBox */
    public OptionsIntBox(IntegerOptionClass myOption, int AccessLevel) {
        initComponents();
        isInt = false;
        access = AccessLevel;
        options = myOption;
        DisplayNameLabel.setText(myOption.getMyDisplay());
        jTextField1.setText((Integer)myOption.read(access) + "");
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        DisplayNameLabel = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));

        setMaximumSize(new java.awt.Dimension(2147483647, 25));
        setMinimumSize(new java.awt.Dimension(107, 25));
        setPreferredSize(new java.awt.Dimension(107, 25));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                saveStuff(evt);
            }
        });
        addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                formAncestorResized(evt);
            }
        });
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                save(evt);
            }
        });

        DisplayNameLabel.setMaximumSize(new java.awt.Dimension(300, 25));
        DisplayNameLabel.setMinimumSize(new java.awt.Dimension(300, 25));
        DisplayNameLabel.setPreferredSize(new java.awt.Dimension(300, 25));
        add(DisplayNameLabel);

        jTextField1.setMinimumSize(new java.awt.Dimension(20, 20));
        jTextField1.setPreferredSize(new java.awt.Dimension(50, 20));
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SaveOption(evt);
            }
        });

        add(jTextField1);

    }
    // </editor-fold>//GEN-END:initComponents

    private void saveStuff(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_saveStuff
        saveChanges();
    }//GEN-LAST:event_saveStuff

    private void formAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formAncestorResized
// TODO add your handling code here:
    }//GEN-LAST:event_formAncestorResized

    private void save(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_save
        saveChanges();
    }//GEN-LAST:event_save
    //MUST CHECK ISINT TO SEE IF INTEGER!!!!!!!
    private void SaveOption(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SaveOption

    }//GEN-LAST:event_SaveOption
    
    private void saveChanges() {
        options.writeOption(Integer.parseInt(jTextField1.getText()), access);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DisplayNameLabel;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    
}
