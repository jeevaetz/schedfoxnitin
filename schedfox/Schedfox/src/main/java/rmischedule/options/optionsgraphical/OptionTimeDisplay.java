/*
 * OptionTimeDisplay.java
 *
 * Created on December 2, 2004, 8:39 AM
 */

package rmischedule.options.optionsgraphical;

import rmischedule.components.*;
import java.util.*;
import javax.swing.*;
import rmischedule.components.Options;
import rmischeduleserver.util.StaticDateTimeFunctions;
import rmischedule.components.graphicalcomponents.TimeEditTextField;
import rmischedule.options.*;
import rmischedule.options.optiontypeclasses.*;
/**
 *
 * @author  ira
 */
public class OptionTimeDisplay extends javax.swing.JPanel {
    TimeOptionClass options;
    private boolean validData;
    private TimeEditTextField myTextField;
    int access;
    
    /** Creates new form OptionTimeDisplay */
    public OptionTimeDisplay(TimeOptionClass myOption, int AccessLevel) {
        initComponents();
        access = AccessLevel;
        myTextField = new TimeEditTextField();
        this.add(myTextField);
        options = myOption;
        TimeDisplayLabel.setText(myOption.getMyDisplay());
        myTextField.setValue((String)myOption.read(access));
    }
    
    private void triggerInvalidData(JTextField parent) {
        if (!validData) {
            validData = true;
            //JOptionPane.showMessageDialog(null, "Error: Non Valid Time!", "Error", JOptionPane.OK_OPTION);
            parent.requestFocus();
        } 
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        TimeDisplayLabel = new javax.swing.JLabel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));

        setMaximumSize(new java.awt.Dimension(600, 25));
        setMinimumSize(new java.awt.Dimension(107, 25));
        setPreferredSize(new java.awt.Dimension(107, 25));
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                saveC(evt);
            }
        });

        TimeDisplayLabel.setText("jLabel1");
        TimeDisplayLabel.setMaximumSize(new java.awt.Dimension(150, 15));
        TimeDisplayLabel.setMinimumSize(new java.awt.Dimension(150, 15));
        TimeDisplayLabel.setPreferredSize(new java.awt.Dimension(150, 15));
        add(TimeDisplayLabel);

    }
    // </editor-fold>//GEN-END:initComponents

    private void saveC(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_saveC
        saveChange();
    }//GEN-LAST:event_saveC

    private void saveChange() {
        String saveVal = myTextField.getValue() + "";
    }
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TimeDisplayLabel;
    // End of variables declaration//GEN-END:variables
    
}
