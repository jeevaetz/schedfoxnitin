/*
 * OptionsWindow.java
 *
 * Created on November 8, 2004, 1:01 PM
 */

package rmischedule.options;

import rmischedule.components.*;
import javax.swing.*;
import java.util.*;
import java.awt.*;
import java.awt.event.*;
import rmischedule.security.User;
import rmischedule.main.Main_Window;
import rmischedule.components.Options;
import schedfoxlib.model.util.Record_Set;
import rmischedule.data_connection.Connection;
    
/**
 *
 * @author  ira
 */
public class OptionsWindow extends javax.swing.JInternalFrame {
    
    private static String Admin = "11"; //Value in database to indicate you have admin priveleges
    
    public Main_Window parent;
    private Connection updateConn;
    private Record_Set optionRecordSet;
    private Options myOptions;
    private Vector optionNames;
    private ArrayList listOfTabs;
    private User userAccess;
    private boolean isAdmin;
    
    /** Creates new form OptionsWindow */
    public OptionsWindow(Main_Window mw) {
        isAdmin = false;
        
        initComponents();
        parent = mw;
        listOfTabs = new ArrayList();
        initConnection();
        SetUpTabbedPane();
        
    }
    
    private void SetUpTabbedPane() {
        String currentCategory = new String();
        String currentAdmin = new String();
        for (int i = 0; i < optionNames.size(); i++) {
            currentCategory = (((Options.options)(optionNames.get(i))).category);
            currentAdmin = (((Options.options)(optionNames.get(i))).access);
            if (!listOfTabs.contains(currentCategory)) {
                if (!((currentAdmin.compareTo("Admin") == 0) && (isAdmin == false))) {
                    jTabbedPane1.addTab((currentCategory), new OptionsPanel(currentCategory, optionNames, this));
                    listOfTabs.add(currentCategory);
                }
            }
        }
    }
    
    public Options getOptions() {
        return myOptions;
    }
    
    private void initConnection() {
        myOptions = parent.options;
        optionNames = myOptions.getOptionNames();
        Collections.sort(optionNames);
        updateConn = new Connection();
        userAccess = parent.getUser();
        //userAccess.updateUser();
        isAdmin = true;//userAccess.checkSecurity(Admin);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setTitle("Settings");
        setMinimumSize(new java.awt.Dimension(200, 150));
        setPreferredSize(new java.awt.Dimension(500, 350));
        jPanel1.setLayout(new java.awt.GridLayout(1, 1));

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.RIGHT);
        jTabbedPane1.setDoubleBuffered(true);
        jTabbedPane1.setFocusCycleRoot(true);
        jPanel1.add(jTabbedPane1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));

        jButton2.setText("Save Settings");
        jButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel2.add(jButton2);

        jPanel2.add(jPanel3);

        jButton1.setText("Cancel");
        jButton1.setMaximumSize(new java.awt.Dimension(99, 23));
        jButton1.setMinimumSize(new java.awt.Dimension(99, 23));
        jButton1.setPreferredSize(new java.awt.Dimension(99, 23));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.add(jButton1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
    }
    // </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        myOptions.updateValues();
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Ick saving values need to fix
        this.removeAll();
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
    
}
