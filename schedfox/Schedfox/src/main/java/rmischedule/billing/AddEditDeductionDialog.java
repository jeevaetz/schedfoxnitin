/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddEditDeductionDialog.java
 *
 * Created on Apr 17, 2011, 2:31:45 PM
 */

package rmischedule.billing;

import java.math.BigDecimal;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import rmischedule.employee.components.Employee_Billing;
import rmischedule.main.Main_Window;
import rmischeduleserver.control.BillingController;
import schedfoxlib.model.Employee;
import schedfoxlib.model.EmployeeDeductionTypes;
import schedfoxlib.model.EmployeeDeductions;
import schedfoxlib.model.User;

/**
 *
 * @author user
 */
public class AddEditDeductionDialog extends javax.swing.JDialog {

    private EmployeeDeductions deduction;
    private String companyId;
    private Employee_Billing empBilling;

    

    private EmployeeDeductionTypeModel employeeDeductionModel = new EmployeeDeductionTypeModel();

    /** Creates new form AddEditDeductionDialog */
    public AddEditDeductionDialog(java.awt.Frame parent, boolean modal,
            EmployeeDeductions deduction, Employee_Billing empBilling, String companyId) {
        super(parent, modal);
        initComponents();

        this.empBilling = empBilling;
        this.deduction = deduction;
        this.companyId = companyId;
        this.fillInForm();
    }

    public EmployeeDeductionTypeModel getDeductionModel() {
        return this.employeeDeductionModel;
    }

    private void fillInForm() {
        try {
            this.amountTxt.setText(deduction.getAmount().doubleValue() + "");
        } catch (NullPointerException npe) {
            this.amountTxt.setText("0.00");
        }
        try {
            this.balanceTxt.setText(deduction.getBalance().doubleValue() + "");
        } catch (NullPointerException npe) {
            this.balanceTxt.setText("0.00");
        }
        try {
            writtenOffChk.setSelected(deduction.getDeductionWrittenOff());
            if (writtenOffChk.isSelected()) {
                User myUser = deduction.getWrittenOffUser();
                userLabel.setText(myUser.getUserFirstName() + " " + myUser.getUserLastName());
            }
        } catch (Exception e) {
            writtenOffChk.setSelected(false);
        }
        BillingController billingController = BillingController.getInstance(this.companyId);
        try {
            ArrayList<EmployeeDeductionTypes> types = billingController.getEmployeeDeductionTypes();
            for (int t = 0; t < types.size(); t++) {
                getDeductionModel().addItem(types.get(t));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Main_Window.parentOfApplication,
                    "Could not get the deduction types", "Error", JOptionPane.ERROR_MESSAGE);
        }

        getDeductionModel().setSelectedItem(deduction.getEmployeeDeductionTypeId());

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        typeCombo = new javax.swing.JComboBox();
        editDeductionTypeBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        amountTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        balanceTxt = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        writtenOffChk = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        closeBtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        saveBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Deduction Add / Edit");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setMaximumSize(new java.awt.Dimension(2147483647, 40));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.X_AXIS));

        jLabel2.setText("Type");
        jLabel2.setMaximumSize(new java.awt.Dimension(200, 16));
        jLabel2.setMinimumSize(new java.awt.Dimension(120, 16));
        jLabel2.setPreferredSize(new java.awt.Dimension(140, 16));
        jPanel1.add(jLabel2);

        typeCombo.setModel(getDeductionModel());
        typeCombo.setMaximumSize(new java.awt.Dimension(32767, 26));
        jPanel1.add(typeCombo);

        editDeductionTypeBtn.setText("Edit Types");
        editDeductionTypeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDeductionTypeBtnActionPerformed(evt);
            }
        });
        jPanel1.add(editDeductionTypeBtn);

        getContentPane().add(jPanel1);

        jPanel2.setMaximumSize(new java.awt.Dimension(2147483647, 40));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));

        jLabel3.setText("Amount");
        jLabel3.setMaximumSize(new java.awt.Dimension(200, 16));
        jLabel3.setMinimumSize(new java.awt.Dimension(120, 16));
        jLabel3.setPreferredSize(new java.awt.Dimension(140, 16));
        jPanel2.add(jLabel3);

        amountTxt.setMaximumSize(new java.awt.Dimension(2147483647, 28));
        jPanel2.add(amountTxt);

        jLabel4.setText("Balance");
        jLabel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 5, 0));
        jLabel4.setMaximumSize(new java.awt.Dimension(120, 16));
        jLabel4.setMinimumSize(new java.awt.Dimension(120, 16));
        jLabel4.setPreferredSize(new java.awt.Dimension(120, 16));
        jPanel2.add(jLabel4);

        balanceTxt.setMaximumSize(new java.awt.Dimension(2147483647, 28));
        jPanel2.add(balanceTxt);

        getContentPane().add(jPanel2);

        jPanel4.setMaximumSize(new java.awt.Dimension(2147483647, 40));
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.X_AXIS));

        jLabel5.setText("Remove from deduction report");
        jLabel5.setMaximumSize(new java.awt.Dimension(200, 16));
        jLabel5.setMinimumSize(new java.awt.Dimension(120, 16));
        jLabel5.setPreferredSize(new java.awt.Dimension(140, 16));
        jPanel4.add(jLabel5);
        jPanel4.add(writtenOffChk);

        jLabel1.setText("Removed by:");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 8, 0, 0));
        jPanel4.add(jLabel1);

        userLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 6, 0, 0));
        userLabel.setMaximumSize(new java.awt.Dimension(200, 16));
        jPanel4.add(userLabel);

        getContentPane().add(jPanel4);

        jPanel3.setMaximumSize(new java.awt.Dimension(32913, 35));
        jPanel3.setMinimumSize(new java.awt.Dimension(146, 35));
        jPanel3.setPreferredSize(new java.awt.Dimension(463, 35));
        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        closeBtn.setText("Close");
        closeBtn.setMaximumSize(new java.awt.Dimension(70, 28));
        closeBtn.setMinimumSize(new java.awt.Dimension(70, 28));
        closeBtn.setPreferredSize(new java.awt.Dimension(70, 28));
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        jPanel3.add(closeBtn);

        saveBtn.setText("Save");
        saveBtn.setMaximumSize(new java.awt.Dimension(70, 28));
        saveBtn.setMinimumSize(new java.awt.Dimension(70, 28));
        saveBtn.setPreferredSize(new java.awt.Dimension(70, 28));
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(233, Short.MAX_VALUE)
                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.add(jPanel5);

        getContentPane().add(jPanel3);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-387)/2, (screenSize.height-175)/2, 387, 175);
    }// </editor-fold>//GEN-END:initComponents

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeBtnActionPerformed

    private void editDeductionTypeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDeductionTypeBtnActionPerformed
        AddEditDeductionTypesDialog editWageTypes = new AddEditDeductionTypesDialog(Main_Window.parentOfApplication,
                true, this.companyId);
        editWageTypes.setVisible(true);
}//GEN-LAST:event_editDeductionTypeBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        try {
            try {
                Employee emp = (Employee)this.empBilling.getMyParent().getSelectedObject();
                deduction.setEmployeeId(emp.getEmployeeId());
            } catch (Exception e) {
                throw new Exception("Please select an employee before clicking save!");
            }
            try {
                deduction.setAmount(new BigDecimal(Double.parseDouble(amountTxt.getText())));
            } catch (Exception e) {
                throw new Exception("Please use a valid amount");
            }
            try {
                deduction.setBalance(new BigDecimal(Double.parseDouble(balanceTxt.getText())));
            } catch (Exception e) {
                throw new Exception("Please use a valid balance");
            }
            try {
                deduction.setDeductionWrittenOff(writtenOffChk.isSelected());
                if (writtenOffChk.isSelected()) {
                    deduction.setWrittenOffBy(Integer.parseInt(Main_Window.parentOfApplication.getUser().getUserId()));
                } else {
                    deduction.setWrittenOffBy(null);
                }
            } catch (Exception e) {}
            try {
                EmployeeDeductionTypes deductionType = 
                        (EmployeeDeductionTypes)employeeDeductionModel.getElementAt(typeCombo.getSelectedIndex());
                deduction.setEmployeeDeductionTypeId(deductionType.getEmployeeDeductionTypeId());
            } catch (Exception e) {
                throw new Exception("Please select a valid deduction type!");
            }
            BillingController billingController = BillingController.getInstance(companyId);
            billingController.saveEmployeeDeduction(deduction);
            JOptionPane.showMessageDialog(Main_Window.parentOfApplication,
                    "Deduction Saved", "Information Saved", JOptionPane.INFORMATION_MESSAGE);
            this.empBilling.reloadData();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Main_Window.parentOfApplication,
                    "Could not save deduction. Error: " + e.getMessage(), "Error on Save",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountTxt;
    private javax.swing.JTextField balanceTxt;
    private javax.swing.JButton closeBtn;
    private javax.swing.JButton editDeductionTypeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton saveBtn;
    private javax.swing.JComboBox typeCombo;
    private javax.swing.JLabel userLabel;
    private javax.swing.JCheckBox writtenOffChk;
    // End of variables declaration//GEN-END:variables

}
