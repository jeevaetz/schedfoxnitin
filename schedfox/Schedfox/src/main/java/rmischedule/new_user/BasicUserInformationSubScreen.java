/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BasicUserInformationSubScreen.java
 *
 * Created on Jun 24, 2010, 12:38:41 PM
 */

package rmischedule.new_user;

import java.awt.Color;
import java.awt.Container;
import java.util.ArrayList;
import java.util.Hashtable;
import javax.swing.text.MaskFormatter;
import org.apache.commons.validator.EmailValidator;
import rmischedule.data_connection.Connection;
import rmischedule.main.Main_Window;
import schedfoxlib.model.util.Record_Set;
import rmischeduleserver.mysqlconnectivity.queries.new_user.check_if_user_exists_query;

/**
 *
 * @author user
 */
public class BasicUserInformationSubScreen extends javax.swing.JPanel implements NewUserSubScreen {

    MaskFormatter phoneFormatter = null;

    /** Creates new form BasicUserInformationSubScreen */
    public BasicUserInformationSubScreen() {
        try {
            phoneFormatter = new MaskFormatter("(###)###-####");
            phoneFormatter.setPlaceholder(" ");
        } catch (Exception e) {
            e.printStackTrace();
            phoneFormatter = new MaskFormatter();
        }
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rowOnePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        firstNameText = new javax.swing.JTextField();
        firstNameError = new javax.swing.JLabel();
        rowTwoPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lastNameText = new javax.swing.JTextField();
        lastNameError = new javax.swing.JLabel();
        rowThreePanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        emailText = new javax.swing.JTextField();
        emailError = new javax.swing.JLabel();
        rowFourPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        phoneNumberField = new javax.swing.JFormattedTextField(phoneFormatter);
        phoneError = new javax.swing.JLabel();
        rowFivePanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        userNameText = new javax.swing.JTextField();
        userNameError = new javax.swing.JLabel();
        rowSixPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        passwordText = new javax.swing.JPasswordField();
        passwordError = new javax.swing.JLabel();
        rowSevenPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        confirmPasswordText = new javax.swing.JPasswordField();
        confirmPasswordError = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Tell us about yourself"));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        rowOnePanel.setLayout(new javax.swing.BoxLayout(rowOnePanel, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setText("First Name");
        jLabel1.setMaximumSize(new java.awt.Dimension(150, 26));
        jLabel1.setMinimumSize(new java.awt.Dimension(50, 26));
        jLabel1.setPreferredSize(new java.awt.Dimension(150, 26));
        rowOnePanel.add(jLabel1);

        firstNameText.setMaximumSize(new java.awt.Dimension(2000, 30));
        firstNameText.setMinimumSize(new java.awt.Dimension(200, 30));
        firstNameText.setPreferredSize(new java.awt.Dimension(200, 22));
        rowOnePanel.add(firstNameText);

        firstNameError.setMaximumSize(new java.awt.Dimension(50, 25));
        firstNameError.setMinimumSize(new java.awt.Dimension(25, 25));
        firstNameError.setPreferredSize(new java.awt.Dimension(25, 25));
        rowOnePanel.add(firstNameError);

        add(rowOnePanel);

        rowTwoPanel.setLayout(new javax.swing.BoxLayout(rowTwoPanel, javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setText("Last Name");
        jLabel2.setMaximumSize(new java.awt.Dimension(150, 26));
        jLabel2.setMinimumSize(new java.awt.Dimension(50, 27));
        jLabel2.setPreferredSize(new java.awt.Dimension(150, 27));
        rowTwoPanel.add(jLabel2);

        lastNameText.setMaximumSize(new java.awt.Dimension(2000, 30));
        lastNameText.setMinimumSize(new java.awt.Dimension(200, 30));
        lastNameText.setPreferredSize(new java.awt.Dimension(200, 22));
        rowTwoPanel.add(lastNameText);

        lastNameError.setMaximumSize(new java.awt.Dimension(50, 25));
        lastNameError.setMinimumSize(new java.awt.Dimension(25, 25));
        lastNameError.setPreferredSize(new java.awt.Dimension(25, 25));
        rowTwoPanel.add(lastNameError);

        add(rowTwoPanel);

        rowThreePanel.setLayout(new javax.swing.BoxLayout(rowThreePanel, javax.swing.BoxLayout.LINE_AXIS));

        jLabel8.setText("Email");
        jLabel8.setMaximumSize(new java.awt.Dimension(150, 26));
        jLabel8.setMinimumSize(new java.awt.Dimension(50, 27));
        jLabel8.setPreferredSize(new java.awt.Dimension(150, 27));
        rowThreePanel.add(jLabel8);

        emailText.setMaximumSize(new java.awt.Dimension(2000, 30));
        emailText.setMinimumSize(new java.awt.Dimension(200, 30));
        emailText.setPreferredSize(new java.awt.Dimension(200, 22));
        rowThreePanel.add(emailText);

        emailError.setMaximumSize(new java.awt.Dimension(50, 25));
        emailError.setMinimumSize(new java.awt.Dimension(25, 25));
        emailError.setPreferredSize(new java.awt.Dimension(25, 25));
        rowThreePanel.add(emailError);

        add(rowThreePanel);

        rowFourPanel.setLayout(new javax.swing.BoxLayout(rowFourPanel, javax.swing.BoxLayout.LINE_AXIS));

        jLabel9.setText("Contact Phone Number");
        jLabel9.setMaximumSize(new java.awt.Dimension(150, 26));
        jLabel9.setMinimumSize(new java.awt.Dimension(50, 27));
        jLabel9.setPreferredSize(new java.awt.Dimension(150, 27));
        rowFourPanel.add(jLabel9);

        phoneNumberField.setMaximumSize(new java.awt.Dimension(2000, 30));
        phoneNumberField.setMinimumSize(new java.awt.Dimension(200, 30));
        phoneNumberField.setPreferredSize(new java.awt.Dimension(200, 22));
        rowFourPanel.add(phoneNumberField);

        phoneError.setMaximumSize(new java.awt.Dimension(50, 25));
        phoneError.setMinimumSize(new java.awt.Dimension(25, 25));
        phoneError.setPreferredSize(new java.awt.Dimension(25, 25));
        rowFourPanel.add(phoneError);

        add(rowFourPanel);

        rowFivePanel.setLayout(new javax.swing.BoxLayout(rowFivePanel, javax.swing.BoxLayout.LINE_AXIS));

        jLabel5.setText("User Name");
        jLabel5.setMaximumSize(new java.awt.Dimension(150, 26));
        jLabel5.setMinimumSize(new java.awt.Dimension(50, 27));
        jLabel5.setPreferredSize(new java.awt.Dimension(150, 27));
        rowFivePanel.add(jLabel5);

        userNameText.setMaximumSize(new java.awt.Dimension(2000, 30));
        userNameText.setMinimumSize(new java.awt.Dimension(200, 30));
        userNameText.setPreferredSize(new java.awt.Dimension(200, 22));
        rowFivePanel.add(userNameText);

        userNameError.setMaximumSize(new java.awt.Dimension(50, 25));
        userNameError.setMinimumSize(new java.awt.Dimension(25, 25));
        userNameError.setPreferredSize(new java.awt.Dimension(25, 25));
        rowFivePanel.add(userNameError);

        add(rowFivePanel);

        rowSixPanel.setLayout(new javax.swing.BoxLayout(rowSixPanel, javax.swing.BoxLayout.LINE_AXIS));

        jLabel6.setText("Password");
        jLabel6.setMaximumSize(new java.awt.Dimension(150, 26));
        jLabel6.setMinimumSize(new java.awt.Dimension(50, 27));
        jLabel6.setPreferredSize(new java.awt.Dimension(150, 27));
        rowSixPanel.add(jLabel6);

        passwordText.setMaximumSize(new java.awt.Dimension(2000, 30));
        passwordText.setMinimumSize(new java.awt.Dimension(200, 30));
        passwordText.setPreferredSize(new java.awt.Dimension(200, 22));
        rowSixPanel.add(passwordText);

        passwordError.setMaximumSize(new java.awt.Dimension(50, 25));
        passwordError.setMinimumSize(new java.awt.Dimension(25, 25));
        passwordError.setPreferredSize(new java.awt.Dimension(25, 25));
        rowSixPanel.add(passwordError);

        add(rowSixPanel);

        rowSevenPanel.setLayout(new javax.swing.BoxLayout(rowSevenPanel, javax.swing.BoxLayout.LINE_AXIS));

        jLabel7.setText("Confirm Password");
        jLabel7.setMaximumSize(new java.awt.Dimension(150, 26));
        jLabel7.setMinimumSize(new java.awt.Dimension(50, 27));
        jLabel7.setPreferredSize(new java.awt.Dimension(150, 27));
        rowSevenPanel.add(jLabel7);

        confirmPasswordText.setMaximumSize(new java.awt.Dimension(2000, 30));
        confirmPasswordText.setMinimumSize(new java.awt.Dimension(200, 30));
        confirmPasswordText.setPreferredSize(new java.awt.Dimension(200, 22));
        rowSevenPanel.add(confirmPasswordText);

        confirmPasswordError.setMaximumSize(new java.awt.Dimension(50, 25));
        confirmPasswordError.setMinimumSize(new java.awt.Dimension(25, 25));
        confirmPasswordError.setPreferredSize(new java.awt.Dimension(25, 25));
        rowSevenPanel.add(confirmPasswordError);

        add(rowSevenPanel);
    }// </editor-fold>//GEN-END:initComponents

    public Hashtable<String, Object> getValues() {
        String firstName = firstNameText.getText().trim().replaceAll("'", "''");
        String lastName = lastNameText.getText().trim().replaceAll("'", "''");
        String emailAddress = emailText.getText().trim().replaceAll("'", "''");
        String phoneNumber = phoneNumberField.getValue().toString().replaceAll("'", "''");
        String userName = userNameText.getText().trim().replaceAll("'", "''");
        String password = new String(passwordText.getPassword()).trim().replaceAll("'", "''");
        
        NewUser newUser = new NewUser();
        newUser.setFirstName(firstName);
        newUser.setLastName(lastName);
        newUser.setPassWord(password);
        newUser.setPhoneNumber(phoneNumber);
        newUser.setUserName(userName);
        newUser.setEmail(emailAddress);

        Hashtable<String, Object> retVal = new Hashtable<String, Object>();
        retVal.put("user", newUser);

        return retVal;
    }

    private void resetErrors() {
        firstNameError.setIcon(null);
        lastNameError.setIcon(null);
        emailError.setIcon(null);
        passwordError.setIcon(null);
        confirmPasswordError.setIcon(null);
        phoneError.setIcon(null);
        userNameError.setIcon(null);

        firstNameText.setBackground(Color.WHITE);
        lastNameText.setBackground(Color.WHITE);
        emailText.setBackground(Color.WHITE);
        phoneNumberField.setBackground(Color.WHITE);
        userNameText.setBackground(Color.WHITE);
        passwordText.setBackground(Color.WHITE);
        confirmPasswordText.setBackground(Color.WHITE);
    }

    /**
     * Gets the validation, returns a non blank string if there were any errors
     * or missing information.
     * @return String
     */
    public ArrayList<String> getValidationString() {
        resetErrors();
        ArrayList<String> errors = new ArrayList<String>();
        String firstName = firstNameText.getText().trim();
        String lastName = lastNameText.getText().trim();
        String emailAddress = emailText.getText().trim();
        String phoneNumber = "";
        try {
            phoneNumber = phoneNumberField.getValue().toString().trim();
        } catch (Exception e) {}
        String userName = userNameText.getText().trim();
        String password = new String(passwordText.getPassword()).trim();
        String confirmPassword = new String(confirmPasswordText.getPassword()).trim();

        if (firstName.length() <= 0) {
            errors.add("A first name is required!");
            firstNameError.setIcon(Main_Window.Medium_Error_Icon);
            firstNameText.setBackground(Main_Window.redInputColor);
        }
        if (lastName.length() <= 0) {
            errors.add("A last name is required!");
            lastNameError.setIcon(Main_Window.Medium_Error_Icon);
            lastNameText.setBackground(Main_Window.redInputColor);
        }
        if (emailAddress.length() <= 0) {
            errors.add("A email is required!");
            emailError.setIcon(Main_Window.Medium_Error_Icon);
            emailText.setBackground(Main_Window.redInputColor);
        } else {
            EmailValidator myValidator = EmailValidator.getInstance();
            if (!myValidator.isValid(emailAddress)) {
                emailError.setIcon(Main_Window.Medium_Error_Icon);
            emailText.setBackground(Main_Window.redInputColor);
                errors.add("The email entered does not appear to be valid!");
            }
        }
        if (phoneNumber.length() <= 0) {
            phoneError.setIcon(Main_Window.Medium_Error_Icon);
            phoneNumberField.setBackground(Main_Window.redInputColor);
            errors.add("A valid phone number is required!");
        }
        if (userName.length() <= 0) {
            userNameError.setIcon(Main_Window.Medium_Error_Icon);
            userNameText.setBackground(Main_Window.redInputColor);
            errors.add("A user name is required!");
        } else {
            if (userName.length() <= 0) {
                userNameError.setIcon(Main_Window.Medium_Error_Icon);
                userNameText.setBackground(Main_Window.redInputColor);
                errors.add("A user name is required!");
            } else {
                check_if_user_exists_query myUserCheckQuery = new check_if_user_exists_query();
                myUserCheckQuery.update(userName);
                
                Connection myConn = new Connection();
                Record_Set rst = myConn.executeQuery(myUserCheckQuery);
                if (rst.getInt("number_of_users") > 0) {
                    userNameError.setIcon(Main_Window.Medium_Error_Icon);
                    userNameText.setBackground(Main_Window.redInputColor);
                    errors.add("This user name has already been used, please use a different one!");
                }
            }
        }
        if (password.length() <= 0) {
            passwordError.setIcon(Main_Window.Medium_Error_Icon);
            passwordText.setBackground(Main_Window.redInputColor);
            errors.add("You must enter a password!");
        } else if (password.length() < 4) {
            passwordError.setIcon(Main_Window.Medium_Error_Icon);
            passwordText.setBackground(Main_Window.redInputColor);
            errors.add("Your password must be at least 4 characters long!");
        }
        if (confirmPassword.length() <= 0) {
            confirmPasswordError.setIcon(Main_Window.Medium_Error_Icon);
            confirmPasswordText.setBackground(Main_Window.redInputColor);
            errors.add("You must confirm your password!");
        } else if (password.compareTo(confirmPassword) != 0) {
            errors.add("Your passwords do not match!");
            confirmPasswordError.setIcon(Main_Window.Medium_Error_Icon);
            confirmPasswordText.setBackground(Main_Window.redInputColor);
            passwordError.setIcon(Main_Window.Medium_Error_Icon);
            passwordText.setBackground(Main_Window.redInputColor);
        }
        return errors;
    }

    public Container getContainer() {
        return this;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel confirmPasswordError;
    private javax.swing.JPasswordField confirmPasswordText;
    private javax.swing.JLabel emailError;
    private javax.swing.JTextField emailText;
    private javax.swing.JLabel firstNameError;
    private javax.swing.JTextField firstNameText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lastNameError;
    private javax.swing.JTextField lastNameText;
    private javax.swing.JLabel passwordError;
    private javax.swing.JPasswordField passwordText;
    private javax.swing.JLabel phoneError;
    private javax.swing.JFormattedTextField phoneNumberField;
    private javax.swing.JPanel rowFivePanel;
    private javax.swing.JPanel rowFourPanel;
    private javax.swing.JPanel rowOnePanel;
    private javax.swing.JPanel rowSevenPanel;
    private javax.swing.JPanel rowSixPanel;
    private javax.swing.JPanel rowThreePanel;
    private javax.swing.JPanel rowTwoPanel;
    private javax.swing.JLabel userNameError;
    private javax.swing.JTextField userNameText;
    // End of variables declaration//GEN-END:variables

}
