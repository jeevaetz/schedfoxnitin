/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GenericCreateMessageScreen.java
 *
 * Created on Jun 30, 2010, 3:56:29 PM
 */
package rmischedule.messagingboard;

import rmischeduleserver.mysqlconnectivity.queries.messageBoard.InsertMsgQuery;
import java.util.Collections;
import java.util.Vector;
import schedfoxlib.model.Company;
import rmischeduleserver.mysqlconnectivity.queries.RunQueriesEx;

/**
 *
 * @author vnguyen
 */
public class GenericCreateMessageScreen extends javax.swing.JPanel {

    GenericMessageBoard myParent;
    Vector<Contact> toBeSent = new Vector();

    /** Creates new form GenericCreateMessageScreen */
    public GenericCreateMessageScreen(GenericMessageBoard parent) {
        init(parent);
    }

    public GenericCreateMessageScreen(GenericMessageBoard parent, Contact c, MessageNote n) {
        init(parent);
        this.toBeSent.add(c);
        this.btnAddRecipent.setVisible(false);
        this.comboBoxCompany.setVisible(false);
        this.comboBoxContacts.setVisible(false);
        this.jlabelCompany.setVisible(false);
        this.jlblContacts.setVisible(false);
        this.jTextFieldContacts.setText(c.toString() + ";");
        this.jTextArea1.setText("Previous message: " + n.getMsg());
        this.subjectTextField.setText("REPLY:" + n.getSubject());
        this.revalidate();
        this.repaint();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jToolBar2 = new javax.swing.JToolBar();
        btnSend = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        jlblContacts = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        comboBoxContacts = new javax.swing.JComboBox();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        btnAddRecipent = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        comboBoxToBeSent = new javax.swing.JComboBox();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnRemoveMailingList = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jlabelCompany = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        comboBoxCompany = new javax.swing.JComboBox();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jInternalFrame3 = new javax.swing.JInternalFrame();
        jToolBar3 = new javax.swing.JToolBar();
        jLabel4 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        subjectTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel3 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jTextFieldContacts = new javax.swing.JTextField();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jInternalFrame1.setBorder(null);
        jInternalFrame1.setClosable(true);
        jInternalFrame1.setVisible(true);
        jInternalFrame1.addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                jInternalFrame1InternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jToolBar2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);
        jToolBar2.setVerifyInputWhenFocusTarget(false);

        btnSend.setText("Send Mail");
        btnSend.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSend.setFocusable(false);
        btnSend.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSend.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        jToolBar2.add(btnSend);
        jToolBar2.add(jSeparator10);

        jlblContacts.setText("Address Book");
        jToolBar2.add(jlblContacts);
        jToolBar2.add(jSeparator5);

        comboBoxContacts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxContactsActionPerformed(evt);
            }
        });
        jToolBar2.add(comboBoxContacts);
        jToolBar2.add(jSeparator7);

        btnAddRecipent.setText("Add Recipient");
        btnAddRecipent.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAddRecipent.setFocusable(false);
        btnAddRecipent.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddRecipent.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAddRecipent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRecipentActionPerformed(evt);
            }
        });
        jToolBar2.add(btnAddRecipent);
        jToolBar2.add(jSeparator8);

        comboBoxToBeSent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxToBeSentActionPerformed(evt);
            }
        });
        jToolBar2.add(comboBoxToBeSent);
        jToolBar2.add(jSeparator2);

        btnRemoveMailingList.setText("Remove Recipent");
        btnRemoveMailingList.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRemoveMailingList.setFocusable(false);
        btnRemoveMailingList.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRemoveMailingList.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRemoveMailingList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveMailingListActionPerformed(evt);
            }
        });
        jToolBar2.add(btnRemoveMailingList);
        jToolBar2.add(jSeparator1);

        jlabelCompany.setText("Company");
        jToolBar2.add(jlabelCompany);
        jToolBar2.add(jSeparator9);

        comboBoxCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCompanyActionPerformed(evt);
            }
        });
        jToolBar2.add(comboBoxCompany);

        jInternalFrame1.getContentPane().add(jToolBar2, java.awt.BorderLayout.PAGE_START);

        jInternalFrame2.setBorder(null);
        jInternalFrame2.setVisible(true);

        jInternalFrame3.setBorder(null);
        jInternalFrame3.setVisible(true);

        jToolBar3.setFloatable(false);
        jToolBar3.setRollover(true);

        jLabel4.setText("Subject");
        jToolBar3.add(jLabel4);
        jToolBar3.add(jSeparator6);
        jToolBar3.add(subjectTextField);

        jInternalFrame3.getContentPane().add(jToolBar3, java.awt.BorderLayout.NORTH);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jInternalFrame3.getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jInternalFrame2.getContentPane().add(jInternalFrame3, java.awt.BorderLayout.CENTER);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jLabel3.setText("Send To:");
        jToolBar1.add(jLabel3);
        jToolBar1.add(jSeparator4);

        jTextFieldContacts.setEditable(false);
        jTextFieldContacts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldContactsActionPerformed(evt);
            }
        });
        jTextFieldContacts.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jTextFieldContactsVetoableChange(evt);
            }
        });
        jToolBar1.add(jTextFieldContacts);

        jInternalFrame2.getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jInternalFrame1.getContentPane().add(jInternalFrame2, java.awt.BorderLayout.CENTER);

        add(jInternalFrame1);
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCompanyActionPerformed
        // TODO add your handling code here:
        int selected = this.comboBoxCompany.getSelectedIndex();
        Company co = this.myParent.myCompanies.get(selected); 
        Vector<Contact> users = this.myParent.compIdToContacts.get(co.getId());
        Collections.sort(users);
        this.comboBoxContacts.removeAllItems();
        this.comboBoxContacts.addItem("");
        for (int i = 0; i < users.size(); i++) {
            if (!this.toBeSent.contains(users.get(i))) {
                this.comboBoxContacts.addItem(users.get(i));
            }
        }
        if (this.comboBoxContacts.getItemCount() > 0) {
            this.comboBoxContacts.setSelectedIndex(0);
        }
    }//GEN-LAST:event_comboBoxCompanyActionPerformed

    private void btnAddRecipentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRecipentActionPerformed
        // TODO add your handling code here:
        Contact c = (Contact) this.comboBoxContacts.getSelectedItem();
        if (c != null && !this.toBeSent.contains(c)) {
            this.toBeSent.add(c);
            writeToSent();
            this.comboBoxContacts.removeItem(c);
            this.comboBoxToBeSent.addItem(c);
            this.jToolBar1.add(new myContactLabel(c, this));
            this.jToolBar1.revalidate();
            this.jToolBar1.repaint();
        }
    }//GEN-LAST:event_btnAddRecipentActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        RunQueriesEx myCompleteQuery = new RunQueriesEx();
        for (Contact c : this.toBeSent) {
            try {
                String db = this.getCompanyDBFromID(c.getCompanyId());
                System.out.println(db);
                myCompleteQuery.add(new InsertMsgQuery(this.myParent.getMyUser().getUserId(), c.getUserId(),
                        db, this.subjectTextField.getText(), this.jTextArea1.getText()));
            } catch (Exception e) {
                System.out.println(e + " occured");
            }
        }
        this.myParent.getMyConn().executeQueryEx(myCompleteQuery);
        this.myParent.reLoad();
        this.jInternalFrame1.dispose();
    }//GEN-LAST:event_btnSendActionPerformed

    private void jInternalFrame1InternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_jInternalFrame1InternalFrameClosing
        // TODO add your handling code here:
        this.myParent.reLoad();
    }//GEN-LAST:event_jInternalFrame1InternalFrameClosing

    private void comboBoxContactsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxContactsActionPerformed
        // TODO add your handling code here:
        if (this.comboBoxContacts.getItemCount() == 0) {
            this.comboBoxContacts.setVisible(false);
            this.jlblContacts.setVisible(false);
            this.btnAddRecipent.setVisible(false);
            this.jSeparator8.setVisible(false);
            this.jSeparator7.setVisible(false);
            this.jSeparator5.setVisible(false);
        } else {
            this.comboBoxContacts.setVisible(true);
            this.jlblContacts.setVisible(true);
            this.btnAddRecipent.setVisible(true);
            this.jSeparator8.setVisible(true);
            this.jSeparator7.setVisible(true);
            this.jSeparator5.setVisible(true);
        }
        /* Contact c = (Contact) this.comboBoxContacts.getSelectedItem();
        int result = JOptionPane.showConfirmDialog(this, "Would you like to add " + c.getFirstName() + " " + c.getLastName()+
        " to recieve this message ?");
        System.out.println(result);
         */
        this.comboBoxContacts.setSelectedItem("");
    }//GEN-LAST:event_comboBoxContactsActionPerformed

    private void comboBoxToBeSentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxToBeSentActionPerformed
        // TODO add your handling code here:
        if (this.comboBoxToBeSent.getItemCount() > 0 && false) {
            this.comboBoxToBeSent.setVisible(true);
            this.btnRemoveMailingList.setVisible(true);
        } else {
            this.comboBoxToBeSent.setVisible(false);
            this.btnRemoveMailingList.setVisible(false);
        }
    }//GEN-LAST:event_comboBoxToBeSentActionPerformed

    private void btnRemoveMailingListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveMailingListActionPerformed
        // TODO add your handling code here:
        Contact c = (Contact) this.comboBoxToBeSent.getSelectedItem();
        if (c != null) {
            this.toBeSent.remove(c);
            this.comboBoxContacts.addItem(c);
            this.comboBoxToBeSent.removeItem(c);
            this.writeToSent();
        }

    }//GEN-LAST:event_btnRemoveMailingListActionPerformed

    private void jTextFieldContactsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldContactsActionPerformed
        // TODO add your handling code here:
        System.out.println("called");
        System.out.println(evt.getActionCommand());
    }//GEN-LAST:event_jTextFieldContactsActionPerformed

    private void jTextFieldContactsVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jTextFieldContactsVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldContactsVetoableChange
    private String getCompanyDBFromID(String id) throws Exception {
        for (Company co : this.myParent.myCompanies) {
            if (co.getId().compareToIgnoreCase(id) == 0) {
                return co.getDB();
            }
        }
        throw new Exception("No Id for this company");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRecipent;
    private javax.swing.JButton btnRemoveMailingList;
    private javax.swing.JButton btnSend;
    private javax.swing.JComboBox comboBoxCompany;
    private javax.swing.JComboBox comboBoxContacts;
    private javax.swing.JComboBox comboBoxToBeSent;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JInternalFrame jInternalFrame3;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldContacts;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JLabel jlabelCompany;
    private javax.swing.JLabel jlblContacts;
    private javax.swing.JTextField subjectTextField;
    // End of variables declaration//GEN-END:variables

    private void init(GenericMessageBoard parent) {
        this.myParent = parent;
        initComponents();
        //this.jToolBar2.removeAll();
        int j = this.jToolBar2.getComponentIndex(this.comboBoxContacts);
        this.jToolBar2.remove(this.comboBoxContacts);
        this.comboBoxContacts = new AutoCompleteComboBox();
        this.jToolBar2.add(this.comboBoxContacts, j);

        this.comboBoxContacts.setEditable(true);
        this.jTextFieldContacts.setVisible(false);
        this.comboBoxToBeSent.setVisible(false);
        this.btnRemoveMailingList.setVisible(false);
        this.comboBoxContacts.revalidate();
        this.comboBoxContacts.repaint();
        this.revalidate();
        this.repaint();

        //this.jToolBar2.add(this.btnSend);
        //this.jToolBar2.add(this.jlblContacts);
        //this.jToolBar2.add(this.comboBoxContacts);
        // this.jToolBar2.add(this.btnAddRecipent);
        // this.jToolBar2.add(this.jlabelCompany);
        // this.jToolBar2.add(this.comboBoxCompany);
        /*javax.swing.plaf.InternalFrameUI ifu = this.jInternalFrame1.getUI();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) ifu).setNorthPane(null);*/
        this.jInternalFrame1.setTitle("Message Composer");
        javax.swing.plaf.InternalFrameUI ifu2 = this.jInternalFrame2.getUI();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) ifu2).setNorthPane(null);
        javax.swing.plaf.InternalFrameUI ifu3 = this.jInternalFrame3.getUI();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) ifu3).setNorthPane(null);

        this.comboBoxCompany.removeAllItems();
        this.comboBoxContacts.removeAllItems();
        for (int i = 0; i < this.myParent.myCompanies.size(); i++) {
            this.comboBoxCompany.addItem(this.myParent.myCompanies.get(i).getName());
        }
        if (this.myParent.myCompanies.size() == 1) {
            this.jlabelCompany.setVisible(false);
            this.comboBoxCompany.setVisible(false);
        }
        this.revalidate();
        this.repaint();
        this.myParent.revalidate();
        this.myParent.repaint();
    }

    private void writeToSent() {
        StringBuilder mailingList = new StringBuilder();
        for (Contact c : this.toBeSent) {
            mailingList.append(c.toString() + ";");
        }
        this.jTextFieldContacts.setText(mailingList.toString());
    }

    void destroyContactLabel(myContactLabel myself) {
        this.jToolBar1.remove(myself);
        this.jToolBar1.revalidate();
        this.jToolBar1.repaint();
        this.toBeSent.remove(myself.getMyContact());
        this.comboBoxCompanyActionPerformed(null);
    }
}
