/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SolutionPanel.java
 *
 * Created on Oct 25, 2010, 12:38:26 PM
 */
package rmischedule.corporate_comm;

import com.creamtec.ajaxswing.AjaxSwingManager;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;

/**
 *
 * @author user
 */
public class SolutionPanel extends javax.swing.JPanel {

    /** Creates new form SolutionPanel */
    public SolutionPanel(String text, String desc) {
        initComponents();

        if (AjaxSwingManager.isAjaxSwingRunning()) {
            desc = desc.replaceAll("\n", "<br/>");
        }
        descriptionLabel.setText("<html><b>" + text + ": </b>" + desc.trim() + "</html>");

    }

    public static int countIndexOf(String content, String search) {
        int ctr = -1;
        int total = 0;
        while (true) {
            if (ctr == -1) {
                ctr = content.indexOf(search);
            } else {
                ctr = content.indexOf(search, ctr);
            }
            if (ctr == -1) {
                break;
            } else {
                total++;
                ctr += search.length();
            }
        }
        return total;
    }

    public Dimension setMySize() {
        Font xx = descriptionLabel.getFont();
        int fontHeight = descriptionLabel.getFontMetrics(xx).getHeight();
        int stringWidth = descriptionLabel.getFontMetrics(xx).stringWidth(descriptionLabel.getText());
        int width = (int) this.getBounds().getWidth();
        if (width <= 0) {
            width = 250;
        }
        int linesCount = (int) Math.floor(stringWidth / width);

        linesCount = Math.max(1, linesCount);

        linesCount += countIndexOf(descriptionLabel.getText(), "<br/>");
        int amountSubtract = 4;
        if (AjaxSwingManager.isAjaxSwingRunning()) {
            amountSubtract = 7;
        }
        Dimension myMin = new Dimension(100, (((fontHeight - amountSubtract) * linesCount) + 5));
        setPreferredSize(myMin);
        setMinimumSize(myMin);
        setMaximumSize(new Dimension(500000, (((fontHeight - amountSubtract) * linesCount) + 5)));
        this.revalidate();
        return myMin;
    }

    public void setFontColor(Color fontColor) {
        descriptionLabel.setForeground(fontColor);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        descriptionLabel = new javax.swing.JLabel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        descriptionLabel.setMaximumSize(new java.awt.Dimension(4100, 40000));
        descriptionLabel.setPreferredSize(new java.awt.Dimension(400, 16));
        add(descriptionLabel);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel descriptionLabel;
    // End of variables declaration//GEN-END:variables
}
