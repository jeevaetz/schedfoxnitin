/*
 * Employee_Load.java
 *
 * Created on November 17, 2004, 9:40 AM
 */

package rmischedule.employee.components;
import java.awt.*;
import javax.swing.*;

/**
 *
 * @author  ira
 */
public class Employee_Load extends javax.swing.JPanel {
    
    private static int MAX_VALUE = 100;
    private updateThread ut;
    public int stopValue;
    private long startTime;
    private long endTime;
    private int incrementVal;
    
    /** Creates new form Employee_Load */
    public Employee_Load() {
        initComponents();
        startTime = 0;
        endTime = 0;
        incrementVal = 50;
        EmployeeLoadProgressBar.setMaximum(MAX_VALUE);
        EmployeeLoadProgressBar.setMinimum(0);
        ut = new updateThread(EmployeeLoadProgressBar, this);
    }
    
    public void setProgressBar(int stopVal, String loadinfo) {
        if (endTime == 0) {
            endTime = System.currentTimeMillis();
            long totalTime = endTime - startTime;
            int difference = stopVal - EmployeeLoadProgressBar.getValue();
            incrementVal = (difference * 10)/ new Long(totalTime).intValue() ;
            if (incrementVal == 0) {
                incrementVal = 1;
            }
        }
        EmployeeInformationLabel.setText(loadinfo);
        EmployeeInformationLabel.repaint();
        stopValue = stopVal;
    }
    
    public void start() {
        startTime = System.currentTimeMillis();
        ut.start();
    }
    
    private class updateThread extends Thread {
        JProgressBar myBar;
        int value;
        Employee_Load parent;
        int myVal = 0;
        
        public updateThread (JProgressBar jpb, Employee_Load p) {
            myBar = jpb;
            parent = p;
        }
        
        
        public void run() {
            
            while (myVal < MAX_VALUE) {
                try {
                    this.sleep(1);
                    while (myVal < parent.stopValue) {
                        this.sleep(incrementVal);
                        myVal++;
                        myBar.setForeground(new Color(255 - (myVal + 10), 255 - (myVal + 50), 255));
                        myBar.setValue(myVal);
                        myBar.repaint();
                        parent.repaint();
                    }
                    
                } catch (Exception e) {}
            }
            try {
                this.sleep(5);
            } catch (Exception e) {}
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        EmployeeInformationLabel = new javax.swing.JLabel();
        EmployeeLoadProgressBar = new javax.swing.JProgressBar();
        jPanel2 = new javax.swing.JPanel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.setMaximumSize(new java.awt.Dimension(2147483647, 80));
        jPanel1.setMinimumSize(new java.awt.Dimension(10, 80));
        jPanel1.setPreferredSize(new java.awt.Dimension(10, 80));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setText("Now Loading Employee Information:");
        jPanel3.add(jLabel1);

        jPanel3.add(EmployeeInformationLabel);

        jPanel1.add(jPanel3, java.awt.BorderLayout.SOUTH);

        add(jPanel1);

        EmployeeLoadProgressBar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        add(EmployeeLoadProgressBar);

        jPanel2.setMaximumSize(new java.awt.Dimension(32767, 40));
        add(jPanel2);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel EmployeeInformationLabel;
    private javax.swing.JProgressBar EmployeeLoadProgressBar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
    
}
