/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * xAvailabilitySettings.java
 *
 * Created on Jun 8, 2011, 9:52:11 AM
 */
package rmischedule.employee.components.xavailability;

import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Date;
import rmischedule.employee.xEmployeeEdit;
import rmischeduleserver.control.TimeOffController;
import schedfoxlib.model.Employee;
import schedfoxlib.model.TimeOffCalc;

/**
 *
 * @author user
 */
public class xAvailabilitySettings extends javax.swing.JPanel {

    private xEmployeeEdit mainPanel;

    /** Creates new form xAvailabilitySettings */
    public xAvailabilitySettings(xEmployeeEdit mainPanel) {
        initComponents();

        this.mainPanel = mainPanel;

    }

    public void refreshCalculations(ArrayList<TimeOffCalc> personalDaysOffCalcs, ArrayList<TimeOffCalc> vacationDaysOffCalcs) {
        this.refreshVacationCalculations(vacationDaysOffCalcs);
        this.refreshPersonalCalculations(personalDaysOffCalcs);
    }

    public void refreshVacationCalculations(ArrayList<TimeOffCalc> vacationDaysOffCalcs) {
        try {
            Employee emp = (Employee) mainPanel.getSelectedObject();
            vacationCalcsPanel.removeAll();
            int newHeight = 0;
            Date endDate = new Date();
            if (endDate.after(emp.getEmployeeTermDate())) {
                endDate = emp.getEmployeeTermDate();
            }
            double availCount = 0;
            for (int c = vacationDaysOffCalcs.size() - 1; c >= 0; c--) {
                if (vacationDaysOffCalcs.get(c).getDaysAccrued() > 0 || vacationDaysOffCalcs.get(c).getDaysTaken().doubleValue() > 0) {
                    TimeOffCalculationPanel timeOff = new TimeOffCalculationPanel(vacationDaysOffCalcs.get(c),
                            mainPanel.cpny);
                    vacationCalcsPanel.add(timeOff);
                    availCount += vacationDaysOffCalcs.get(c).getDaysTaken().doubleValue();
                    newHeight += timeOff.getPreferredSize().getHeight();
                }
            }
            try {
                vacationCalcsPanel.setPreferredSize(new Dimension(vacationCalcsPanel.getWidth(), newHeight + (int)availCount * 16));
                vacationCalcsPanel.setMinimumSize(new Dimension(vacationCalcsPanel.getWidth(), newHeight + (int)availCount * 16));
            } catch (Exception e) {
            }
            vacationCalcsPanel.revalidate();
            vacationScroll.revalidate();
        } catch (Exception e) {
        }
    }

    public void refreshPersonalCalculations(ArrayList<TimeOffCalc> personalDaysOffCalcs) {
        try {
            Employee emp = (Employee) mainPanel.getSelectedObject();
            personalCalcsPanel.removeAll();
            int newHeight = 0;
            double availCount = 0;
            Date endDate = new Date();
            if (endDate.after(emp.getEmployeeTermDate())) {
                endDate = emp.getEmployeeTermDate();
            }
            for (int c = personalDaysOffCalcs.size() - 1; c >= 0; c--) {
                if (personalDaysOffCalcs.get(c).getDaysAccrued() > 0 || personalDaysOffCalcs.get(c).getDaysTaken().doubleValue() > 0) {
                    TimeOffCalculationPanel timeOff = new TimeOffCalculationPanel(personalDaysOffCalcs.get(c),
                            mainPanel.cpny);
                    personalCalcsPanel.add(timeOff);
                    availCount += personalDaysOffCalcs.get(c).getDaysTaken().doubleValue();
                    newHeight += timeOff.getPreferredSize().getHeight();
                }
            }
            try {
                personalCalcsPanel.setPreferredSize(new Dimension(personalCalcsPanel.getWidth(), newHeight + (int)availCount * 16));
                personalCalcsPanel.setMinimumSize(new Dimension(personalCalcsPanel.getWidth(), newHeight + (int)availCount * 16));
            } catch (Exception e) {
            }
            personalCalcsPanel.revalidate();
            personalScroll.revalidate();
        } catch (Exception e) {
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vacationScroll = new javax.swing.JScrollPane();
        vacationCalcsPanel = new javax.swing.JPanel();
        personalScroll = new javax.swing.JScrollPane();
        personalCalcsPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(246, 237, 225));
        setLayout(new java.awt.GridLayout());

        vacationScroll.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        vacationCalcsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Vacation"));
        vacationCalcsPanel.setMaximumSize(new java.awt.Dimension(20000, 200000));
        vacationCalcsPanel.setMinimumSize(new java.awt.Dimension(200, 200));
        vacationCalcsPanel.setPreferredSize(new java.awt.Dimension(200, 200));
        vacationCalcsPanel.setLayout(new javax.swing.BoxLayout(vacationCalcsPanel, javax.swing.BoxLayout.Y_AXIS));
        vacationScroll.setViewportView(vacationCalcsPanel);

        add(vacationScroll);

        personalScroll.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        personalCalcsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Personal"));
        personalCalcsPanel.setMaximumSize(new java.awt.Dimension(20000, 200000));
        personalCalcsPanel.setMinimumSize(new java.awt.Dimension(200, 200));
        personalCalcsPanel.setPreferredSize(new java.awt.Dimension(200, 200));
        personalCalcsPanel.setLayout(new javax.swing.BoxLayout(personalCalcsPanel, javax.swing.BoxLayout.Y_AXIS));
        personalScroll.setViewportView(personalCalcsPanel);

        add(personalScroll);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel personalCalcsPanel;
    private javax.swing.JScrollPane personalScroll;
    private javax.swing.JPanel vacationCalcsPanel;
    private javax.swing.JScrollPane vacationScroll;
    // End of variables declaration//GEN-END:variables
}
