/*
 * usked_Main_Export.java
 *
 * Created on January 14, 2005, 2:28 PM
 */

package rmischedule.data_export.ultra32;
import rmischeduleserver.util.StaticDateTimeFunctions;
import schedfoxlib.model.util.Record_Set;
import rmischedule.main.*;
import rmischedule.components.*;
import javax.swing.*;
import javax.swing.border.*;
import java.awt.*;
import java.io.File;
import rmischedule.components.jcalendar.*;
import rmischedule.data_connection.*;
import rmischeduleserver.data_connection_types.*;
import rmischeduleserver.mysqlconnectivity.queries.ExportCCS.*;
import rmischeduleserver.mysqlconnectivity.queries.employee.employee_list_query;
import rmischeduleserver.mysqlconnectivity.queries.*;
import java.util.*;
import rmischedule.ireports.classes.PrintTotalsForLocation;
import rmischedule.ireports.viewer.IReportViewer;
/**
 *
 * @author  ira
 */
public class usked_Main_Export extends javax.swing.JInternalFrame {
    
    private Main_Window Parent;
    //private rmischedule.components.Branch_LB myBranchListBox;
    //private rmischedule.components.Company_LB myCompanyListBox;
    private Branch_Combo_Box myBranchCombo;
    private Company_Combo_Box myCompanyCombo;
    private JCalendarComboBox myStartCombo;
    private JCalendarComboBox myEndCombo;
    private Connection myConn;
    //private ExportCCSQuery myQuery;
    private new_export_schedule_query myQuery;
    private assemble_schedule_for_export_query exportQuery;
    private ExportClientInfoQuery exportClientQuery;

    private employee_list_query exportEmployeeInfoQuery;
    private ExportEmployeeInformationQuery exportEmployeeQuery;
    
    /** Creates new form usked_Main_Export */
    public usked_Main_Export(Main_Window parent) {
        initComponents();
        Parent = parent;
        myConn = new Connection();
        //myBranchListBox = new Branch_LB(Parent);
        //myCompanyListBox = new Company_LB(Parent);
        myCompanyCombo = new Company_Combo_Box();
        myBranchCombo = new Branch_Combo_Box(myCompanyCombo);
        myBranchCombo.setMaximumSize(new Dimension(500, 20));
        myCompanyCombo.setMaximumSize(new Dimension(500, 20));
        exportQuery = new assemble_schedule_for_export_query();
        exportEmployeeQuery = new ExportEmployeeInformationQuery();
        exportEmployeeInfoQuery = new employee_list_query();
        exportClientQuery = new ExportClientInfoQuery();
        exportEmployeeQuery = new ExportEmployeeInformationQuery();
        CompanyBranchPanel.add(myCompanyCombo);
        CompanyBranchPanel.add(myBranchCombo);
        CompanyBranchPanel.add(SpacerPanel2);
        
        //Set up Date Range Box
        myStartCombo = new JCalendarComboBox();
        myEndCombo = new JCalendarComboBox();
        myStartCombo.setBorder(new EmptyBorder(0,10,0,0));
        myEndCombo.setBorder(new EmptyBorder(0,10,0,0));
        myStartCombo.setMaximumSize(new Dimension(120, 20));
        myEndCombo.setMaximumSize(new Dimension(120, 20));
        StartDatePanel.add(myStartCombo);
        EndDatePanel.add(myEndCombo);
        
        //myConn.setCompanyLB(myCompanyListBox);
        //myConn.setBranchLB(myBranchListBox);
        Parent.desktop.add(this);
        this.setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        SpacerPanel2 = new javax.swing.JPanel();
        CompanyBranchPanel = new javax.swing.JPanel();
        SpacerPanel = new javax.swing.JPanel();
        DatePanel = new javax.swing.JPanel();
        StartDatePanel = new javax.swing.JPanel();
        StartDateLabel = new javax.swing.JLabel();
        EndDatePanel = new javax.swing.JPanel();
        EndDateLabel = new javax.swing.JLabel();
        OkCancelPanel = new javax.swing.JPanel();
        CancelButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        OkButton = new javax.swing.JButton();

        SpacerPanel2.setMaximumSize(new java.awt.Dimension(32767, 8));
        SpacerPanel2.setMinimumSize(new java.awt.Dimension(10, 8));
        SpacerPanel2.setPreferredSize(new java.awt.Dimension(10, 8));

        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Export Utility");
        CompanyBranchPanel.setLayout(new javax.swing.BoxLayout(CompanyBranchPanel, javax.swing.BoxLayout.Y_AXIS));

        CompanyBranchPanel.setBorder(new javax.swing.border.TitledBorder("Select Company and Branch"));
        CompanyBranchPanel.setMaximumSize(new java.awt.Dimension(90000, 120));
        CompanyBranchPanel.setMinimumSize(new java.awt.Dimension(12000, 80));
        CompanyBranchPanel.setPreferredSize(new java.awt.Dimension(12000, 90));
        SpacerPanel.setMaximumSize(new java.awt.Dimension(32767, 8));
        SpacerPanel.setMinimumSize(new java.awt.Dimension(10, 8));
        SpacerPanel.setPreferredSize(new java.awt.Dimension(10, 8));
        CompanyBranchPanel.add(SpacerPanel);

        getContentPane().add(CompanyBranchPanel);

        DatePanel.setLayout(new java.awt.GridLayout(1, 2));

        DatePanel.setBorder(new javax.swing.border.TitledBorder("Select A Date Range"));
        DatePanel.setMaximumSize(new java.awt.Dimension(12000, 90));
        StartDatePanel.setLayout(new javax.swing.BoxLayout(StartDatePanel, javax.swing.BoxLayout.X_AXIS));

        StartDateLabel.setText("Start Date:");
        StartDatePanel.add(StartDateLabel);

        DatePanel.add(StartDatePanel);

        EndDatePanel.setLayout(new javax.swing.BoxLayout(EndDatePanel, javax.swing.BoxLayout.X_AXIS));

        EndDateLabel.setText("End Date:");
        EndDatePanel.add(EndDateLabel);

        DatePanel.add(EndDatePanel);

        getContentPane().add(DatePanel);

        OkCancelPanel.setLayout(new javax.swing.BoxLayout(OkCancelPanel, javax.swing.BoxLayout.X_AXIS));

        OkCancelPanel.setMaximumSize(new java.awt.Dimension(900, 25));
        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        OkCancelPanel.add(CancelButton);

        OkCancelPanel.add(jPanel1);

        OkButton.setText("Export");
        OkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkButtonActionPerformed(evt);
            }
        });

        OkCancelPanel.add(OkButton);

        getContentPane().add(OkCancelPanel);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-450)/2, (screenSize.height-316)/2, 450, 316);
    }
    // </editor-fold>//GEN-END:initComponents

    private void OkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkButtonActionPerformed
        Calendar startCal = myStartCombo.getCalendar();
        Calendar endCal = myEndCombo.getCalendar();
        //startCal.add(Calendar.DAY_OF_MONTH, -1);
        myConn.setCompany(myCompanyCombo.getSelectedCompany().getId());
        myConn.setBranch(myBranchCombo.getSelectedBranch().getBranchId() + "");
        String start = StaticDateTimeFunctions.convertCalendarToDatabaseFormat(startCal);
        String end =   StaticDateTimeFunctions.convertCalendarToDatabaseFormat(endCal);


        exception_report_query myEmployeeException = new exception_report_query();
        myEmployeeException.update("", "", start, end, "", "", false);
        myConn.prepQuery(myEmployeeException);
        Record_Set rst = myConn.executeQuery(myEmployeeException);

        
        boolean exportDataBoolean = true;
        if (rst.length() > 0) {
            exportDataBoolean = false;
            StringBuffer employeeException = new StringBuffer();
            employeeException.append("The following employees are missing Usked ID's!\r\n\r\n");
            for (int r = 0; r < rst.length(); r++) {
                employeeException.append(rst.getString("employee_first_name") + " " + rst.getString("employee_last_name") + "\r\n");
                rst.moveNext();
            }
            employeeException.append("\r\n Do you still want to export this data?");
            int response =
                    JOptionPane.showConfirmDialog(Main_Window.parentOfApplication, employeeException.toString(), "Error", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                exportDataBoolean = true;
            }
        }

        if (exportDataBoolean) {
            //myQuery = new ExportCCSQuery();
            myQuery = new new_export_schedule_query();
            RunQueriesEx myQueryEx = new RunQueriesEx();

            exportEmployeeQuery.update();
            exportQuery.update("", "", start, end, "", "", false);
            exportEmployeeInfoQuery.update("", "", null, true);

            myQuery.update(start, end);
            myConn.prepQuery(exportQuery);
            myConn.prepQuery(myQuery);
            myQueryEx.add(myQuery);
            myConn.prepQuery(exportClientQuery);
            myConn.prepQuery(exportEmployeeQuery);
            myConn.prepQuery(exportEmployeeInfoQuery);
            try {
                ArrayList exportData = myConn.executeQueryEx(myQueryEx);
                //Record_Set exportData = myConn.executeQuery(exportQuery);
                Record_Set client = myConn.executeQuery(exportClientQuery);
                Record_Set employee = myConn.executeQuery(exportEmployeeQuery);
                Record_Set employeeInfo = myConn.executeQuery(exportEmployeeInfoQuery);
                Record_Set exportEmployeeInfo = myConn.executeQuery(exportEmployeeQuery);
                ExportData myDat = null;
                try {
                    File testFile = new File("z:/UskedExport.xls");
                    if (!testFile.exists()) {
                        throw new Exception("No file, allowing saving file");
                    }
                    myDat = new ExportData(testFile.getAbsolutePath());
                } catch (Exception e) {
                    JFileChooser fc = new JFileChooser();
                    fc.showSaveDialog(Parent);
                    myDat = new ExportData(fc.getSelectedFile().getAbsolutePath());
                }
                myDat.exportData((Record_Set)exportData.get(0), client, employee, employeeInfo);
                myDat.exportEmployeeInformation(exportEmployeeInfo);
                int response = JOptionPane.showConfirmDialog(Main_Window.parentOfApplication, "Export successful do you wish to view a summary?", "View summary", JOptionPane.YES_NO_OPTION);
                if (response == JOptionPane.YES_OPTION) {
                    HashMap map = new HashMap();
                    map.put("start_week", startCal);
                    map.put("end_week", endCal);

                    PrintTotalsForLocation locationPrint = new PrintTotalsForLocation();
                    locationPrint.runReport(myCompanyCombo.getSelectedCompany().getId(), myBranchCombo.getSelectedBranch().getBranchId() + "", map);

                    IReportViewer viewer = new IReportViewer(locationPrint.getJasperPrint());
                    Main_Window.parentOfApplication.desktop.add(viewer);
                    viewer.showForm();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_OkButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JPanel CompanyBranchPanel;
    private javax.swing.JPanel DatePanel;
    private javax.swing.JLabel EndDateLabel;
    private javax.swing.JPanel EndDatePanel;
    private javax.swing.JButton OkButton;
    private javax.swing.JPanel OkCancelPanel;
    private javax.swing.JPanel SpacerPanel;
    private javax.swing.JPanel SpacerPanel2;
    private javax.swing.JLabel StartDateLabel;
    private javax.swing.JPanel StartDatePanel;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    
}
