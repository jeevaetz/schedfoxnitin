/*
 * Schedule_Employee_Availability_Split_Pane.java
 *
 * Created on December 21, 2004, 9:37 AM
 */

package rmischedule.schedule;
import java.awt.*;
import rmischedule.schedule.components.*;
import javax.swing.*;
import rmischedule.schedule.components.notes.*;
import rmischedule.schedule.components.openshifts.OpenShiftPanel;
import rmischedule.schedule.components.employeestodisplay.EmployeeToDisplayPanel;
import rmischedule.schedule.components.timesheetrecon.TimeSheetReconciliationPanel;
/**
 *
 * @author  ira
 */
public class Schedule_Employee_Availability_Split_Pane extends javax.swing.JPanel {
    
    public int SMALLEST_OPEN_SHIFT_PANEL_SIZE = 0;
    public int LARGEST_OPEN_SHIFT_PANEL_SIZE = 100;
    
    private AvailabilityToolBar availToolBar;
    private JPanel contentPanel;
    
    private boolean isLocked;
    public Schedule_Employee_Availability parentWin;
    private boolean alarmArmed;
    private alarmThread at;
    private CardLayout myLayout;
    
    private TimeSheetReconciliationPanel myTimeSheetPanel;
    private EmployeeToDisplayPanel myEmployeePanel;
    private OpenShiftPanel openShiftPanel;
    
    /** Creates new form Schedule_Employee_Availability_Split_Pane */
    public Schedule_Employee_Availability_Split_Pane(Schedule_Employee_Availability parent) {
        parentWin = parent;
        initComponents();
        //at = new alarmThread();
        contentPanel = new JPanel();
        myLayout = new CardLayout();
        contentPanel.setLayout(myLayout);
        //at.start();
        setLayout(new BorderLayout());
        //availToolBar = new AvailabilityToolBar(this);
        notePanel.add(new AddNoteClass(parent.parent.getLayeredPane(), parent.parent.FloatContainerPanel));
        
        alarmArmed = false;
        this.AvailabilityPanel.add(parent);
        
        myTimeSheetPanel = new TimeSheetReconciliationPanel(parent.parent);
        myEmployeePanel = new EmployeeToDisplayPanel(parent.parent);
        openShiftPanel = new OpenShiftPanel(parent.parent, this);
        
        contentPanel.add(AvailabilityPanel, "avail");
        contentPanel.add(myTimeSheetPanel, "sheet");
        contentPanel.add(myEmployeePanel, "emp");
        contentPanel.add(openShiftPanel, "open");
        
        add(contentPanel, BorderLayout.CENTER);
        add(controlPanel, BorderLayout.SOUTH);
        //add(AvailabilityPanel, BorderLayout.CENTER);
        //add(availToolBar, BorderLayout.NORTH);
    }
    
    public void lock() {
        isLocked = true;
        AvailabilityPanel.setEnabled(false);
    }
    
    public void unlock() {
        isLocked = false;
        AvailabilityPanel.setEnabled(true);
    }
    
    public boolean isLocked() {
        return isLocked;
    }
    
    public void scanAndRemoveEmpFromReconciliation(SEmployee empToScan) {
        myTimeSheetPanel.scanAndRemoveEmpFromReconciliation(empToScan);
    }
    
    public void triggerAlarmMode(String alarmMessages) {

    }
    
    public void toggleAlarmMode(String alertMessage) {
        if (alarmArmed) {
            shutUpAlarm();
        } else {
            triggerAlarmMode(alertMessage);
        }
    }
    
    public void shutUpAlarm() {
        alarmArmed = false;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        AvailabilityPanel = new javax.swing.JPanel();
        controlPanel = new javax.swing.JPanel();
        notePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        AvailabilityPanel.setLayout(new java.awt.GridLayout(1, 0));

        controlPanel.setLayout(new javax.swing.BoxLayout(controlPanel, javax.swing.BoxLayout.X_AXIS));

        controlPanel.setMaximumSize(new java.awt.Dimension(0, 26));
        controlPanel.setMinimumSize(new java.awt.Dimension(0, 26));
        controlPanel.setPreferredSize(new java.awt.Dimension(100, 26));
        notePanel.setMaximumSize(new java.awt.Dimension(26, 26));
        notePanel.setMinimumSize(new java.awt.Dimension(26, 26));
        notePanel.setPreferredSize(new java.awt.Dimension(26, 26));
        controlPanel.add(notePanel);

        jLabel1.setText("Drag an E-Z Note");
        controlPanel.add(jLabel1);

        setLayout(new java.awt.BorderLayout());

    }// </editor-fold>//GEN-END:initComponents
    
    
    private class alarmThread extends rmischedule.schedule.ScheduleThread {
        
        private boolean killMe;
        public alarmThread() {
            registerMe(parentWin.parent);
            killMe = false;
        }
        
        public void killMe() {
            killMe = true;
            interrupt();
        }
        
        public void trySleep(int amount) {
            if (killMe) {
                return;
            }
            try {
                sleep(amount);
            } catch (Exception e) {}
        }
        
        public void run() {
            while (!parentWin.acb.killThread && !killMe) {
                while (alarmArmed) {
                    trySleep(300);
                }
                trySleep(2000);
            }
        }
    }
    
    public void selectAvailability() {
        parentWin.doOnSelect();
        myLayout.show(contentPanel, "avail");
    }
    
    public void selectEmployeeShifts() {
        myEmployeePanel.doOnSelect();
        myLayout.show(contentPanel, "emp");
    }
    
    public void selectAlerts() {
        openShiftPanel.doOnSelect();
        myLayout.show(contentPanel, "open");
    }
    
    public void selectConsolidate() {
        myTimeSheetPanel.doOnSelect();
        myLayout.show(contentPanel, "sheet");
    }
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AvailabilityPanel;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel notePanel;
    // End of variables declaration//GEN-END:variables
    
}
