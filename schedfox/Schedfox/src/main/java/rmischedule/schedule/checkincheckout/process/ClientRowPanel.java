/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rmischedule.schedule.checkincheckout.process;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.TimeZone;
import static rmischedule.schedule.checkincheckout.IndividualCheckInCheckOutPanel.getBranchInfo;
import rmischeduleserver.control.ClientController;
import rmischeduleserver.control.CompanyController;
import rmischeduleserver.control.EmployeeController;
import schedfoxlib.model.Branch;
import schedfoxlib.model.Client;
import schedfoxlib.model.Company;
import schedfoxlib.model.Employee;
import schedfoxlib.model.ScheduleData;

/**
 *
 * @author ira
 */
public class ClientRowPanel extends javax.swing.JPanel {

    /**
     * Creates new form ClientRowPanel
     */
    public ClientRowPanel() {
        initComponents();
    }

    public void updateClientInfo(ScheduleData schedData, Company comp) {
        ClientController clientController = ClientController.getInstance(comp.getCompId());
        EmployeeController employeeController = EmployeeController.getInstance(comp.getCompId());
        CompanyController compController = CompanyController.getInstance();
        try {
            Client client = clientController.getClientById(schedData.getClientId());
            Employee employee = employeeController.getEmployeeById(schedData.getEmployeeId());
            Branch branch = compController.getBranchById(schedData.getBranchId());

            branchNameTxt.setText(branch.getBranchName());
            clientNameTxt.setText(client.getClientName());
            employeeNameTxt.setText(employee.getFullName());
            phoneNumberTxt.setText(employee.getPhoneNumber() == null || employee.getPhoneNumber().length() == 0 ? employee.getEmployeeCell() : employee.getPhoneNumber());

            int startTime = 0;
            SimpleDateFormat timeFormat = new SimpleDateFormat("HHmm");
            Calendar startDate = Calendar.getInstance();
            try {
                TimeZone timezone = Calendar.getInstance().getTimeZone();
                Branch entryBranch
                        = getBranchInfo(Integer.parseInt(comp.getCompId()), schedData.getBranchId());
                int normalOffset = timezone.getOffset(startDate.getTimeInMillis());
                TimeZone entryTimeZone = TimeZone.getTimeZone(entryBranch.getTimezone());
                int entryOffset = entryTimeZone.getOffset(startDate.getTimeInMillis());
                int adjustOffset = normalOffset - entryOffset;
                if (adjustOffset != 0) {
                    startTime = schedData.getStartTime() + (adjustOffset / 60 / 1000);
                } else {
                    startTime = schedData.getStartTime();
                }
            } catch (Exception e) {
                startTime = schedData.getStartTime();
            }
            try {
                startDate.setTime(schedData.getDate());
                startDate.set(Calendar.HOUR_OF_DAY, (int) Math.floor(startTime / 60));
                startDate.set(Calendar.MINUTE, startTime % 60);
            } catch (Exception e) {

            }

            startTimeLabel.setText(timeFormat.format(startDate.getTime()));
        } catch (Exception exe) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        branchNameTxt = new javax.swing.JLabel();
        clientNameTxt = new javax.swing.JLabel();
        employeeNameTxt = new javax.swing.JLabel();
        phoneNumberTxt = new javax.swing.JLabel();
        startTimeLabel = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 0));
        setOpaque(false);
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        branchNameTxt.setText("Branch Name");
        branchNameTxt.setMaximumSize(new java.awt.Dimension(100, 16));
        branchNameTxt.setMinimumSize(new java.awt.Dimension(100, 16));
        branchNameTxt.setPreferredSize(new java.awt.Dimension(100, 16));
        add(branchNameTxt);

        clientNameTxt.setText("Client Name");
        clientNameTxt.setMaximumSize(new java.awt.Dimension(160, 16));
        clientNameTxt.setMinimumSize(new java.awt.Dimension(160, 16));
        clientNameTxt.setPreferredSize(new java.awt.Dimension(160, 16));
        add(clientNameTxt);

        employeeNameTxt.setText("Employee Name");
        employeeNameTxt.setMaximumSize(new java.awt.Dimension(140, 16));
        employeeNameTxt.setMinimumSize(new java.awt.Dimension(140, 16));
        employeeNameTxt.setPreferredSize(new java.awt.Dimension(140, 16));
        add(employeeNameTxt);

        phoneNumberTxt.setText("Employee Phone");
        phoneNumberTxt.setMaximumSize(new java.awt.Dimension(115, 16));
        phoneNumberTxt.setMinimumSize(new java.awt.Dimension(115, 16));
        phoneNumberTxt.setPreferredSize(new java.awt.Dimension(115, 16));
        add(phoneNumberTxt);

        startTimeLabel.setText("Start Time");
        startTimeLabel.setMaximumSize(new java.awt.Dimension(2000, 16));
        add(startTimeLabel);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel branchNameTxt;
    private javax.swing.JLabel clientNameTxt;
    private javax.swing.JLabel employeeNameTxt;
    private javax.swing.JLabel phoneNumberTxt;
    private javax.swing.JLabel startTimeLabel;
    // End of variables declaration//GEN-END:variables
}
