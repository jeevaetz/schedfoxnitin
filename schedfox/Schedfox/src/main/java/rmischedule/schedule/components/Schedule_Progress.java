/*
 * Schedule_Progress.java
 *
 * Created on April 28, 2004, 6:46 AM
 */

package rmischedule.schedule.components;
import java.awt.*;
import javax.swing.*;
import rmischedule.schedule.components.*;
/**
 *
 * @author  jason.allen
 */
public class Schedule_Progress extends javax.swing.JInternalFrame{
    private int myPos;
    private int myPbVal;
    private double myIncrementColorValue;
    private static final Color DONE_LOAD_COLOR = new Color(145,52,17, 255);
    
    
    private javax.swing.JProgressBar currentProgressBar;

    /** Creates new form Schedule_Progress */
    public Schedule_Progress() {
        initComponents();

                     pbClients.setVisible(false);
                   pbEmployees.setVisible(false);
                pbMasterShifts.setVisible(false);
                      pbShifts.setVisible(false);
        pbApplyingMasterShifts.setVisible(false);
            pbBuildingSchedule.setVisible(false);
               pbConflictCheck.setVisible(false);
                    myIncrementColorValue = 0.0000;
                    myPos = 0;
    }

    public void setPosition(int pos){
        if(pos > 0){endLoad();}
        switch(pos){
            case 0: currentProgressBar = pbClients;                 break;
            case 1: currentProgressBar = pbEmployees;               break;
            case 2: currentProgressBar = pbMasterShifts;            break;
            case 3: currentProgressBar = pbShifts;                  break;
            case 4: currentProgressBar = pbApplyingMasterShifts;    break;
            case 5: currentProgressBar = pbBuildingSchedule;        break;
            case 6: currentProgressBar = pbConflictCheck;           break;
        }
        currentProgressBar.setVisible(true);
        currentProgressBar.setStringPainted(true);
        if(pos < 4){currentProgressBar.setString("Downloading");}
        myPos = pos;
        forcePosition();
        jProgressBar1.setValue(pos + 1);
        repaint();
    }

    public void forcePosition(){
        int p = myPos;
    }

    public void beginLoad(int s){
        currentProgressBar.setValue(0);
        currentProgressBar.setMaximum(s);
        myIncrementColorValue = 240/(new Double(s).doubleValue());
        if (myIncrementColorValue == 0) {
		myIncrementColorValue = 1;
        }
        myPbVal = 0;
    }

    public void stepParse(){
        currentProgressBar.setString(
            "Processing " + String.valueOf(myPbVal) +
            " of " + String.valueOf(currentProgressBar.getMaximum())
        );
        try {
            currentProgressBar.setForeground(new Color(89,113,174, (new Double(myIncrementColorValue * myPbVal).intValue())));
        } catch (Exception e) {}
        currentProgressBar.setValue(myPbVal++);
        //currentProgressBar.setForeground(new Color(200, 200, new Double(200 - (myPbVal * 1.5)).intValue()));
    }

    public void endLoad(){
        currentProgressBar.setValue(currentProgressBar.getMaximum());
        currentProgressBar.setString("Completed");
        currentProgressBar.setForeground(DONE_LOAD_COLOR);
        if(myPos == 0){         cbClients.setSelected(true);}
        if(myPos == 1){       cbEmployees.setSelected(true);}
        if(myPos == 2){    cbMasterShifts.setSelected(true);}
        if(myPos == 3){          cbShifts.setSelected(true);}
        if(myPos == 4){     cbApplyMaster.setSelected(true);}
        if(myPos == 5){cbBuildingSchedule.setSelected(true);}
        if(myPos == 6){   cbConflictCheck.setSelected(true);}
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        cbClients              = new javax.swing.JCheckBox();
        cbEmployees            = new javax.swing.JCheckBox();
        cbMasterShifts         = new javax.swing.JCheckBox();
        cbShifts               = new javax.swing.JCheckBox();
        jProgressBar1          = new javax.swing.JProgressBar();
        cbApplyMaster          = new javax.swing.JCheckBox();
        cbBuildingSchedule     = new javax.swing.JCheckBox();
        cbConflictCheck        = new javax.swing.JCheckBox();
        pbBuildingSchedule     = new javax.swing.JProgressBar();
        pbEmployees            = new javax.swing.JProgressBar();
        pbMasterShifts         = new javax.swing.JProgressBar();
        pbShifts               = new javax.swing.JProgressBar();
        pbApplyingMasterShifts = new javax.swing.JProgressBar();
        pbClients              = new javax.swing.JProgressBar();
        pbConflictCheck        = new javax.swing.JProgressBar();

        cbClients.setEnabled(false);
        cbEmployees.setEnabled(false);
        cbMasterShifts.setEnabled(false);
        cbShifts.setEnabled(false);
        cbApplyMaster.setEnabled(false);
        cbBuildingSchedule.setEnabled(false);
        cbConflictCheck.setEnabled(false);

        getContentPane().setLayout(null);

        cbClients.setText("Loading Clients");
        cbClients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbClientsMouseClicked(evt);
            }
        });

        getContentPane().add(cbClients);
        cbClients.setBounds(20, 20, 160, 23);

        cbEmployees.setText("Loading Employees");
        getContentPane().add(cbEmployees);
        cbEmployees.setBounds(20, 40, 160, 23);

        cbMasterShifts.setText("Loading Master Shifts");
        getContentPane().add(cbMasterShifts);
        cbMasterShifts.setBounds(20, 60, 160, 23);

        cbShifts.setText("Loading Shifts");
        getContentPane().add(cbShifts);
        cbShifts.setBounds(20, 80, 160, 23);

        jProgressBar1.setMaximum(6);
        getContentPane().add(jProgressBar1);
        jProgressBar1.setBounds(10, 168, 380, 18);

        cbApplyMaster.setText("Applying Master Shifts");
        getContentPane().add(cbApplyMaster);
        cbApplyMaster.setBounds(20, 100, 160, 23);

        cbBuildingSchedule.setText("Building Schedule");
        getContentPane().add(cbBuildingSchedule);
        cbBuildingSchedule.setBounds(20, 120, 160, 23);

        cbConflictCheck.setText("Checking For Conflicts");
        getContentPane().add(cbConflictCheck);
        cbConflictCheck.setBounds(20, 140, 160, 23);

        getContentPane().add(pbConflictCheck);
        pbConflictCheck.setBounds(190, 140, 200, 20);

        getContentPane().add(pbBuildingSchedule);
        pbBuildingSchedule.setBounds(190, 120, 200, 20);

        getContentPane().add(pbEmployees);
        pbEmployees.setBounds(190, 40, 200, 20);

        getContentPane().add(pbMasterShifts);
        pbMasterShifts.setBounds(190, 60, 200, 20);

        getContentPane().add(pbShifts);
        pbShifts.setBounds(190, 80, 200, 20);

        getContentPane().add(pbApplyingMasterShifts);
        pbApplyingMasterShifts.setBounds(190, 100, 200, 20);

        getContentPane().add(pbClients);
        pbClients.setBounds(190, 20, 200, 20);

        pack();
    }//GEN-END:initComponents

    private void cbClientsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbClientsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbClientsMouseClicked

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbApplyMaster;
    private javax.swing.JCheckBox cbBuildingSchedule;
    private javax.swing.JCheckBox cbClients;
    private javax.swing.JCheckBox cbEmployees;
    private javax.swing.JCheckBox cbMasterShifts;
    private javax.swing.JCheckBox cbShifts;
    private javax.swing.JCheckBox cbConflictCheck;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar pbApplyingMasterShifts;
    private javax.swing.JProgressBar pbBuildingSchedule;
    private javax.swing.JProgressBar pbClients;
    private javax.swing.JProgressBar pbEmployees;
    private javax.swing.JProgressBar pbMasterShifts;
    private javax.swing.JProgressBar pbShifts;
    private javax.swing.JProgressBar pbConflictCheck;
    // End of variables declaration//GEN-END:variables

}
