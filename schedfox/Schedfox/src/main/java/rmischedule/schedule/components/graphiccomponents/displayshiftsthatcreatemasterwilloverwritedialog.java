/*
 * displayshiftsthatcreatemasterwilloverwritedialog.java
 *
 * Created on August 9, 2005, 11:54 AM
 */

package rmischedule.schedule.components.graphiccomponents;
import java.util.ArrayList;
import rmischedule.components.List_View;
import rmischedule.main.Main_Window;
import rmischedule.schedule.components.DShift;
import rmischedule.schedule.components.SClient;
import rmischedule.schedule.components.SEmployee;
/**
 *
 * @author  Ira Juneau
 */
public class displayshiftsthatcreatemasterwilloverwritedialog extends javax.swing.JDialog {

    private List_View displayAllShiftsOverwrittenListView;
    private DShift parentShift;
    private ArrayList<DShift> shifts;

    /** Creates new form displayshiftsthatcreatemasterwilloverwritedialog */
    public displayshiftsthatcreatemasterwilloverwritedialog(Main_Window parent, boolean modal, DShift shiftToCreate, ArrayList<DShift> myShifts) {
        super(parent, modal);
        initComponents();
        shifts = myShifts;
        parentShift = shiftToCreate;
        displayAllShiftsOverwrittenListView = new List_View();
        displayAllShiftsOverwrittenListView.addColumn("Employee", List_View.STRING);
        displayAllShiftsOverwrittenListView.addColumn("Location", List_View.STRING);
        displayAllShiftsOverwrittenListView.addColumn("!!!!!Start", List_View.STRING);
        displayAllShiftsOverwrittenListView.addColumn("End", List_View.STRING);
        displayAllShiftsOverwrittenListView.addColumn("Date", List_View.STRING);
        displayAllShiftsOverwrittenListView.buildTable();
        displayAllShiftsOverwrittenListView.maximizeTable();
        ConflictingShiftsPanel.add(displayAllShiftsOverwrittenListView.myScrollPane);
        displayShiftInformation();
    }

    private void displayShiftInformation() {
        for (int i = 0; i < shifts.size(); i++) {
            Object[] myArrayOfData = new Object[5];
            myArrayOfData[0] = shifts.get(i).getEmployee().getName();
            myArrayOfData[1] = shifts.get(i).getClient().getClientName();
            myArrayOfData[2] = shifts.get(i).getStartTime();
            myArrayOfData[3] = shifts.get(i).getEndTime();
            myArrayOfData[4] = shifts.get(i).getDateString();
            displayAllShiftsOverwrittenListView.addRow(myArrayOfData);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        MainPanel = new javax.swing.JPanel();
        InformationPanel = new javax.swing.JPanel();
        ConflictingShiftsPanel = new javax.swing.JPanel();
        ControlPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        MainPanel.setLayout(new javax.swing.BoxLayout(MainPanel, javax.swing.BoxLayout.Y_AXIS));

        InformationPanel.setMaximumSize(new java.awt.Dimension(32767, 40));
        InformationPanel.setMinimumSize(new java.awt.Dimension(10, 40));
        InformationPanel.setPreferredSize(new java.awt.Dimension(10, 40));
        MainPanel.add(InformationPanel);

        ConflictingShiftsPanel.setLayout(new java.awt.GridLayout());

        MainPanel.add(ConflictingShiftsPanel);

        ControlPanel.setLayout(new javax.swing.BoxLayout(ControlPanel, javax.swing.BoxLayout.X_AXIS));

        ControlPanel.setMaximumSize(new java.awt.Dimension(32767, 25));
        ControlPanel.setMinimumSize(new java.awt.Dimension(10, 25));
        ControlPanel.setPreferredSize(new java.awt.Dimension(10, 25));
        jButton1.setText("Create Master And Remove Shifts");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ControlPanel.add(jButton1);

        ControlPanel.add(jPanel1);

        jButton2.setText("Create Master Without Removing Shifts");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        ControlPanel.add(jButton2);

        ControlPanel.add(jPanel2);

        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        ControlPanel.add(jButton3);

        MainPanel.add(ControlPanel);

        getContentPane().add(MainPanel, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-627)/2, (screenSize.height-329)/2, 627, 329);
    }
    // </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//        parentShift.create_Master_Shift_From_This();
        parentShift.executeAllQueuedQueries();
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //shifts.get(0).delete_Master_Shift(true);
//        parentShift.create_Master_Shift_From_This();
        parentShift.executeAllQueuedQueries();
        shifts.get(0).executeAllQueuedQueries();
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ConflictingShiftsPanel;
    private javax.swing.JPanel ControlPanel;
    private javax.swing.JPanel InformationPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

}
