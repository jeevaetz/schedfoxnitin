/*
 * DisplayConflictsDialog.java
 *
 * Created on February 16, 2005, 2:15 PM
 */

package rmischedule.schedule.components;
import rmischedule.main.*;
import schedfoxlib.model.util.Record_Set;
import rmischedule.components.Options;
/**
 *
 * @author  ira
 */
public class DisplayConflictsDialog extends javax.swing.JDialog {
    
    public DisplayConflictsDialog(java.awt.Frame parent, boolean modal, SShift shift, Record_Set rs, Record_Set rs2) {
        super(parent, modal);
        initComponents();
        Main_Window mw = (Main_Window)parent;
        boolean MilTime = Main_Window.parentOfApplication.is12HourFormat();
        String mySchedConflict = new String("Conflicts with Following Shifts: \n");
        rs.moveToFront();
        rs2.moveToFront();
        for (int i = 0; i < rs.length(); i++) {
            IndividualConflictingShift myShifts = new IndividualConflictingShift(rs, (Main_Window)parent, MilTime, true);
            DisplayPanel.add(myShifts);
            rs.moveNext();
        }
        for (int i = 0; i < rs2.length(); i++) {
            IndividualConflictingShift myShifts = new IndividualConflictingShift(rs2, (Main_Window)parent, MilTime, false);
            DisplayPanel.add(myShifts);
            rs2.moveNext();
        }
        //JOptionPane.showMessageDialog(parent, mySchedConflict, "Conflicts", JOptionPane.OK_OPTION);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        DisplayPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel1.setMinimumSize(new java.awt.Dimension(10, 30));
        jPanel1.setPreferredSize(new java.awt.Dimension(10, 30));
        getContentPane().add(jPanel1);

        DisplayPanel.setLayout(new javax.swing.BoxLayout(DisplayPanel, javax.swing.BoxLayout.Y_AXIS));

        DisplayPanel.setMaximumSize(new java.awt.Dimension(9000, 9000));
        DisplayPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        DisplayPanel.setPreferredSize(new java.awt.Dimension(9000, 9000));
        getContentPane().add(DisplayPanel);

        jPanel3.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel3.setMinimumSize(new java.awt.Dimension(10, 30));
        jPanel3.setPreferredSize(new java.awt.Dimension(10, 30));
        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel3.add(jButton1);

        getContentPane().add(jPanel3);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-400)/2, (screenSize.height-300)/2, 400, 300);
    }//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DisplayPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
    
}
