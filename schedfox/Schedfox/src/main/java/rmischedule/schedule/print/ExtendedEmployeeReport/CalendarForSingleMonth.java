/*
 * CalendarForSingleMonth.java
 *
 * Created on December 19, 2005, 9:22 AM
 */

package rmischedule.schedule.print.ExtendedEmployeeReport;
import rmischeduleserver.util.StaticDateTimeFunctions;
import java.util.*;
import rmischedule.components.*;
import rmischedule.xprint.xdata.*;
/**
 *
 * @author  Ira Juneau
 */
public class CalendarForSingleMonth extends javax.swing.JPanel {
    
    private String startDate;
    private String endDate;
    private String emp;
    private boolean hasData;
    private int numOfClientsThatWillFit;
    
    /** Creates new form CalendarForSingleMonth */
    public CalendarForSingleMonth(xNewPrintData myData, String employeeName, Iterator<xNewPrintData.client> myCliIterator, String sdate, String edate) {
        initComponents();
        startDate = sdate;
        endDate = edate;
        emp = employeeName;
        HeaderLabel.setText("Schedule For " + employeeName + " (" + StaticDateTimeFunctions.convertDatabaseDateToReadable(sdate) + " to " + StaticDateTimeFunctions.convertDatabaseDateToReadable(edate) + ")");
        int numClients = 0;
        numOfClientsThatWillFit = 2;
        while(myCliIterator.hasNext() && numClients < numOfClientsThatWillFit) {
            xNewPrintData.client nextClientName = myCliIterator.next();
            SortedSet<xNewPrintDay> myShiftsForClientDate = myData.getDaysByClientEmployeeAndDateRange(nextClientName.clientName, emp, sdate, edate);
            if (myShiftsForClientDate.size() > 0) {
                CalendarForSingleClient myNewCal = new CalendarForSingleClient(myShiftsForClientDate, nextClientName, sdate, edate); 
                if (myNewCal.getNumDays() > 35) {
                    numOfClientsThatWillFit = 1;
                } else if (myNewCal.getNumDays() < 22) {
                    numOfClientsThatWillFit = 3;
                } else {
                    numOfClientsThatWillFit = 2;
                }
                DataPanel.add(myNewCal);
                numClients++;
            }
        }
        //Test if this form is blank or not
        if (numClients == 0) {
            hasData = false;
        } else {
            hasData = true;
        }
    }
    
    /**
     * Does this form have any data?
     */
    public boolean containsData() {
        return hasData;
    }
    
    public String getEmployee() {
        return emp;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        MonthCalendarHeaderPanel = new javax.swing.JPanel();
        HeaderLabel = new javax.swing.JLabel();
        DataPanel = new javax.swing.JPanel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        setBackground(new java.awt.Color(255, 255, 255));
        setDoubleBuffered(false);
        MonthCalendarHeaderPanel.setLayout(new java.awt.GridLayout(1, 0));

        MonthCalendarHeaderPanel.setDoubleBuffered(false);
        MonthCalendarHeaderPanel.setMaximumSize(new java.awt.Dimension(32767, 22));
        MonthCalendarHeaderPanel.setMinimumSize(new java.awt.Dimension(10, 22));
        MonthCalendarHeaderPanel.setOpaque(false);
        MonthCalendarHeaderPanel.setPreferredSize(new java.awt.Dimension(10, 22));
        HeaderLabel.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 16));
        HeaderLabel.setText("Schedule For August 2005");
        HeaderLabel.setMaximumSize(new java.awt.Dimension(282, 22));
        HeaderLabel.setMinimumSize(new java.awt.Dimension(282, 22));
        HeaderLabel.setPreferredSize(new java.awt.Dimension(282, 22));
        MonthCalendarHeaderPanel.add(HeaderLabel);

        add(MonthCalendarHeaderPanel);

        DataPanel.setLayout(new javax.swing.BoxLayout(DataPanel, javax.swing.BoxLayout.Y_AXIS));

        DataPanel.setDoubleBuffered(false);
        DataPanel.setOpaque(false);
        add(DataPanel);

    }
    // </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DataPanel;
    private javax.swing.JLabel HeaderLabel;
    private javax.swing.JPanel MonthCalendarHeaderPanel;
    // End of variables declaration//GEN-END:variables
    
}
