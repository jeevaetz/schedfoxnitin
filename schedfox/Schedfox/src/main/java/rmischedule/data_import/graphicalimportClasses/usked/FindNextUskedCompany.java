/*
 * FindNextUskedCompany.java
 *
 * Created on March 1, 2006, 9:19 AM
 */

package rmischedule.data_import.graphicalimportClasses.usked;
import schedfoxlib.model.Company;
import java.io.*;
import java.util.*;
import rmischedule.components.data.*;
import rmischedule.main.*;
import java.util.regex.*;
import rmischedule.data_import.dataImportClasses.usked.*;
import schedfoxlib.model.Branch;
/**
 *
 * @author  Ira Juneau
 */
public class FindNextUskedCompany extends javax.swing.JPanel {
    
    private String myDirectory;
    private ArrayList<companyBranch> myCompanyBranch;
    
    /** Creates new form FindNextUskedCompany */
    public FindNextUskedCompany(String uskedDir) {
        initComponents();
        myCompanyBranch = new ArrayList();
        findUskedDirectory(uskedDir);
        setComboBoxToSelectMostLikelyMatch();
        
    }
    
    public void findUskedDirectory(String uskedDir) {
        File myFile = new File(uskedDir);
        String lastDir = new String();
        StringTokenizer getLastDir = new StringTokenizer(uskedDir, "\\");
        myDirectory = uskedDir + "\\";
        while (getLastDir.hasMoreTokens()) {
            lastDir = getLastDir.nextToken();
        }
        setBorder(javax.swing.BorderFactory.createTitledBorder("Usked Directory: " + lastDir));
        dbf_reader myReader = new dbf_reader(uskedDir + "\\setmast.dbf");
        UskedCompanyLabel.setText(myReader.getString("CDDNAME"));
        Vector<Company> myCompanies = Main_Window.parentOfApplication.getListOfCompanies();
        for (int i = 0; i < myCompanies.size(); i++) {
            Vector<Branch> myBranches = myCompanies.get(i).getBranches();
            for (int b = 0; b < myBranches.size(); b++) {
                SchedFoxCompanyCombo.addItem(myCompanies.get(i).getName() + "-" + myBranches.get(b).getBranchName());
                myCompanyBranch.add(new companyBranch(myBranches.get(b), myCompanies.get(i)));
            }
        }
    }
    
    /**
     * Returns the company object of the currently selected company..
     */ 
    public Company getSelectedCompany() {
        return myCompanyBranch.get(SchedFoxCompanyCombo.getSelectedIndex()).getCompany();
    }
    
    /**
     * Returns the branch object of the currenctly selected branch...
     */
    public Branch getSelectedBranch() {
        return myCompanyBranch.get(SchedFoxCompanyCombo.getSelectedIndex()).getBranch();
    }
    
    /**
     * If user has selected to import data (see selectThisData()) Then will return a data source
     * object representing data...fun
     */
    public uskedDataSource getDataSource() {
        return new uskedDataSource(myDirectory);
    }
    
    public String getDirectory() {
        return myDirectory;
    }
    
    /**
     * Need to return if the user has selected this data or not...
     */
    public boolean isSelected() {
        return true;
    }
    
    /**
     * Picks through the words to try and figure out which company will match up the best...
     */
    private void setComboBoxToSelectMostLikelyMatch() {
        int positionMostLikelyMatched = 0;
        int maxMatches = 0;
        int currMatches = 0;
        String[] myTokenizer = UskedCompanyLabel.getText().split("\\W");
        for (int i = 0; i < SchedFoxCompanyCombo.getItemCount(); i++) {
            String myMatch = (String)SchedFoxCompanyCombo.getItemAt(i);
            currMatches = 0;
            for (int t = 0; t < myTokenizer.length; t++) {
                Pattern p = Pattern.compile(".*" + myTokenizer[t].toLowerCase() + ".*");
                Matcher m = p.matcher(myMatch.toLowerCase());
                if (m.matches()) {
                    currMatches++;
                    if (currMatches > maxMatches) {
                        maxMatches = currMatches;
                        positionMostLikelyMatched = i;
                    }
                }
            }
        }
        SchedFoxCompanyCombo.setSelectedIndex(positionMostLikelyMatched);
    }
    
    private class companyBranch {
        Branch myBranch;
        Company myCompany;
        public companyBranch(Branch branch, Company company) {
            myBranch = branch;
            myCompany = company;
        }
        
        public Branch getBranch() {
            return myBranch;
        }
        
        public Company getCompany() {
            return myCompany;
        }
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel3 = new javax.swing.JLabel();
        UskedCompanyLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        SchedFoxCompanyCombo = new javax.swing.JComboBox();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));

        setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        setMaximumSize(new java.awt.Dimension(32767, 44));
        setMinimumSize(new java.awt.Dimension(10, 44));
        setPreferredSize(new java.awt.Dimension(10, 44));
        jLabel3.setText("Usked Name  ");
        jLabel3.setMaximumSize(new java.awt.Dimension(80, 20));
        jLabel3.setMinimumSize(new java.awt.Dimension(80, 20));
        jLabel3.setPreferredSize(new java.awt.Dimension(80, 20));
        add(jLabel3);

        UskedCompanyLabel.setMaximumSize(new java.awt.Dimension(200, 20));
        UskedCompanyLabel.setMinimumSize(new java.awt.Dimension(200, 20));
        UskedCompanyLabel.setPreferredSize(new java.awt.Dimension(200, 20));
        add(UskedCompanyLabel);

        jLabel5.setText("SchedFox Company");
        add(jLabel5);

        add(SchedFoxCompanyCombo);

    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox SchedFoxCompanyCombo;
    private javax.swing.JLabel UskedCompanyLabel;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
    
}
