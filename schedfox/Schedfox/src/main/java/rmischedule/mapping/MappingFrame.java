/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MappingFrame.java
 *
 * Created on Dec 20, 2011, 10:31:53 AM
 */
package rmischedule.mapping;

import chrriis.dj.nativeswing.NSOption;
import chrriis.dj.nativeswing.NativeComponentWrapper;
import chrriis.dj.nativeswing.NativeSwing;
import chrriis.dj.nativeswing.swtimpl.NativeInterface;
import chrriis.dj.nativeswing.swtimpl.components.JWebBrowser;
import java.awt.BorderLayout;
import java.util.ArrayList;
import rmischeduleserver.control.BranchController;
import schedfoxlib.model.Branch;

/**
 *
 * @author user
 */
public class MappingFrame extends javax.swing.JInternalFrame {

    private String url = "http://training.schedfox.com:8080/GoogleMapsApp/GenerateMap.jsp?schedfox=wekj";
    private JWebBrowser webBrowser;

    /** Creates new form MappingFrame */
    public MappingFrame() {
        initComponents();

        BranchController branchController = BranchController.getInstance("1");
        try {
            ArrayList<Branch> branches = branchController.getBranchesForManagement(1);
            for (int b = 0; b < branches.size(); b++) {
                branchCombo.addItem(branches.get(b));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        NativeSwing.initialize();
        NativeInterface.open();
        webBrowser = new JWebBrowser();
        webBrowser.setBarsVisible(false);
        webBrowser.navigate(url);
        add(new NativeComponentWrapper(webBrowser).createEmbeddableComponent(new NSOption[0]), BorderLayout.CENTER);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        branchCombo = new javax.swing.JComboBox();
        dispEmp = new javax.swing.JCheckBox();
        dispCli = new javax.swing.JCheckBox();
        displayMapBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 35));
        jPanel1.setMinimumSize(new java.awt.Dimension(100, 35));
        jPanel1.setPreferredSize(new java.awt.Dimension(638, 35));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setText("Branch");
        jLabel1.setMaximumSize(new java.awt.Dimension(50, 16));
        jLabel1.setMinimumSize(new java.awt.Dimension(50, 16));
        jLabel1.setPreferredSize(new java.awt.Dimension(50, 16));
        jPanel1.add(jLabel1);

        branchCombo.setMaximumSize(new java.awt.Dimension(32767, 26));
        jPanel1.add(branchCombo);

        dispEmp.setText("Display Employees");
        jPanel1.add(dispEmp);

        dispCli.setText("Display Clients");
        jPanel1.add(dispCli);

        displayMapBtn.setText("Display Map");
        displayMapBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayMapBtnActionPerformed(evt);
            }
        });
        jPanel1.add(displayMapBtn);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 638, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 399, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-650)/2, (screenSize.height-465)/2, 650, 465);
    }// </editor-fold>//GEN-END:initComponents

    private void displayMapBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayMapBtnActionPerformed
        String myurl = url + "&";
        if (dispEmp.isSelected()) {
            myurl += "emps=on&";
        }
        if (dispCli.isSelected()) {
            myurl += "clis=on&";
        }
        Branch selbranch = (Branch)branchCombo.getSelectedItem();
        myurl += "branch=" + selbranch.getBranchId();
        webBrowser.navigate(myurl);
    }//GEN-LAST:event_displayMapBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox branchCombo;
    private javax.swing.JCheckBox dispCli;
    private javax.swing.JCheckBox dispEmp;
    private javax.swing.JButton displayMapBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
