/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * xManagementCompanyEdit.java
 *
 * Created on Nov 15, 2010, 11:03:38 AM
 */

package rmischedule.xadmin;

import javax.swing.JPanel;
import rmischedule.components.List_View;
import rmischedule.components.graphicalcomponents.GenericEditForm;
import rmischedule.components.graphicalcomponents.GenericEditSubForm;
import schedfoxlib.model.util.Record_Set;
import rmischeduleserver.mysqlconnectivity.queries.GeneralQueryFormat;
import rmischeduleserver.mysqlconnectivity.queries.util.GenericQuery;
import rmischeduleserver.mysqlconnectivity.queries.util.get_company_by_management_query;

/**
 *
 * @author user
 */
public class xManagementCompanyEdit extends GenericEditSubForm {

    private List_View myCompanyList;
    private GenericEditForm myParent;
    
    /** Creates new form xManagementCompanyEdit */
    public xManagementCompanyEdit(GenericEditForm myParent) {
        initComponents();
        this.myParent = myParent;

        myCompanyList = new List_View();
        myCompanyList.addColumn("Company Id", List_View.STRING, false, false);
        myCompanyList.addColumn("Company Name", List_View.STRING, true, true);
        myCompanyList.addColumn("Company DB", List_View.STRING, true, true);
        myCompanyList.addColumn("Company Manage", List_View.STRING, false, false);
        myCompanyList.buildTable();
        myCompanyList.maximizeTable();

        companyPanel.add(myCompanyList.myScrollPane);

        registerListView(myCompanyList);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        companyPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        companyPanel.setMaximumSize(new java.awt.Dimension(32767, 100));
        companyPanel.setMinimumSize(new java.awt.Dimension(0, 100));
        companyPanel.setPreferredSize(new java.awt.Dimension(400, 100));
        companyPanel.setLayout(new java.awt.GridLayout());
        add(companyPanel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public GeneralQueryFormat getQuery(boolean isSelected) {
        get_company_by_management_query myCompanyQuery = new get_company_by_management_query();

        myCompanyQuery.update(myParent.getMyIdForSave());

        return myCompanyQuery;
    }

    @Override
    public GeneralQueryFormat getSaveQuery(boolean isNewData) {
        return new GenericQuery("SELECT NOW();");
    }

    @Override
    public void loadData(Record_Set company) {
        myCompanyList.clearRows();
        for (int i = 0; i < company.length(); i++) {
            Object[] myData = {company.getString("company_id"), company.getString("company_name"), company.getString("company_db"), company.getString("company_management_id")};
            myCompanyList.addRow(myData);
            company.moveNext();
        }

        myCompanyList.fireTableDataChanged();
    }

    @Override
    public boolean needsMoreRecordSets() {
        return false;
    }

    @Override
    public String getMyTabTitle() {
        return "Accessible Companies";
    }

    @Override
    public JPanel getMyForm() {
        return this;
    }

    @Override
    public void doOnClear() {
        
    }

    @Override
    public boolean userHasAccess() {
        return true;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel companyPanel;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

}
