/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DynamicComboSetup.java
 *
 * Created on Aug 20, 2010, 2:26:01 PM
 */

package rmischedule.xadmin;

import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.DefaultListModel;
import rmischedule.data_connection.Connection;
import rmischeduleserver.control.model.DynamicFieldDef;
import rmischeduleserver.mysqlconnectivity.queries.admin.save_dynamic_field_query;

/**
 *
 * @author user
 */
public class DynamicComboSetup extends javax.swing.JDialog {

    private StringComboModel stringComboModel;
    private DynamicFieldDef fieldDef;
    private Connection myConn;

    public static final String token = ":|:";

    /** Creates new form DynamicComboSetup */
    public DynamicComboSetup(java.awt.Frame parent, boolean modal, DynamicFieldDef fieldDef, Connection myConn) {
        super(parent, modal);
        this.fieldDef = fieldDef;
        this.myConn = myConn;
        stringComboModel = new StringComboModel();
        
        initComponents();
        initCombo();
    }

    private void initCombo() {
        StringTokenizer tokenizer = new StringTokenizer(fieldDef.getDynamicFieldDefDefault(), token, false);
        stringComboModel.clear();
        while (tokenizer.hasMoreTokens()) {
            String token = tokenizer.nextToken();
            if (token.trim().length() > 0) {
                stringComboModel.addElement(token);
            }
        }

    }

    private void addValue() {
        int selIndex = valueList.getSelectedIndex();
        if (valueList.getSelectedIndex() == -1) {
            stringComboModel.addElement(valueTxt.getText().trim());
            valueTxt.setText("");
            valueList.clearSelection();
        } else {
            stringComboModel.editElement(valueTxt.getText().trim(), valueList.getSelectedIndex());
            valueTxt.setText("");
            valueList.clearSelection();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        valueTxt = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        valueList = new javax.swing.JList(stringComboModel);
        jPanel3 = new javax.swing.JPanel();
        moveDownBtn = new javax.swing.JButton();
        moveUpBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        saveBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 3, 0));
        jPanel4.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setText("Item");
        jLabel1.setMaximumSize(new java.awt.Dimension(70, 14));
        jLabel1.setMinimumSize(new java.awt.Dimension(70, 14));
        jLabel1.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel4.add(jLabel1);

        valueTxt.setMaximumSize(new java.awt.Dimension(2147483647, 28));
        valueTxt.setMinimumSize(new java.awt.Dimension(12, 26));
        valueTxt.setPreferredSize(new java.awt.Dimension(12, 26));
        jPanel4.add(valueTxt);

        jPanel1.setMaximumSize(new java.awt.Dimension(3, 3));
        jPanel1.setMinimumSize(new java.awt.Dimension(3, 3));
        jPanel1.setPreferredSize(new java.awt.Dimension(3, 3));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );

        jPanel4.add(jPanel1);

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        jPanel4.add(addBtn);

        jPanel2.add(jPanel4);

        valueList.setModel(stringComboModel);
        jScrollPane1.setViewportView(valueList);

        jPanel2.add(jScrollPane1);

        getContentPane().add(jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 3, 0, 3));
        jPanel3.setLayout(new java.awt.GridLayout(10, 1));

        moveDownBtn.setText("Move Down");
        moveDownBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveDownBtnActionPerformed(evt);
            }
        });
        jPanel3.add(moveDownBtn);

        moveUpBtn.setText("Move Up");
        moveUpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveUpBtnActionPerformed(evt);
            }
        });
        jPanel3.add(moveUpBtn);

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel3.add(deleteBtn);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 91, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel8);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 91, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel9);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 91, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel10);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 91, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel11);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 91, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel12);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 91, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel13);

        saveBtn.setText("Close");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        jPanel3.add(saveBtn);

        getContentPane().add(jPanel3);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-355)/2, (screenSize.height-270)/2, 355, 270);
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        String value = "";
        ArrayList<String> myValues = stringComboModel.getValues();
        for (int v = 0; v < myValues.size(); v++) {
            if (value.trim().length() > 0) {
                value += token;
            }
            value += myValues.get(v);
        }
        this.fieldDef.setDynamicFieldDefDefault(value);
        if (this.fieldDef.getId() > 0) {
            save_dynamic_field_query saveQuery = new save_dynamic_field_query();
            saveQuery.update(fieldDef.getId(), fieldDef.getFieldLocationId(), fieldDef.getFieldTypeId(), fieldDef.getName(), 
                    fieldDef.getDynamicFieldDefDefault(), fieldDef.isIsRequired(), true, fieldDef.isShowInClientLogin(), fieldDef.isShowInEmployeeLogin());
            myConn.executeUpdate(saveQuery);
        }
        this.dispose();
    }//GEN-LAST:event_saveBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        addValue();
    }//GEN-LAST:event_addBtnActionPerformed

    private void moveDownBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveDownBtnActionPerformed
        if (valueList.getSelectedIndex() > -1) {
            if (this.stringComboModel.moveDown(valueList.getSelectedIndex())) {
                valueList.setSelectedIndex(valueList.getSelectedIndex() + 1);
            }
        }
    }//GEN-LAST:event_moveDownBtnActionPerformed

    private void moveUpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveUpBtnActionPerformed
        if (valueList.getSelectedIndex() > -1) {
            if (this.stringComboModel.moveUp(valueList.getSelectedIndex())) {
                valueList.setSelectedIndex(valueList.getSelectedIndex() - 1);
            }
        }
    }//GEN-LAST:event_moveUpBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        if (valueList.getSelectedIndex() > -1) {
            stringComboModel.removeElementAt(valueList.getSelectedIndex());
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private class StringComboModel extends DefaultListModel  {

        private int selectedIndex = -1;
        private ArrayList<String> arrayValues;

        public StringComboModel() {
            arrayValues = new ArrayList<String>();
        }

        public void clearElements() {
            arrayValues.clear();
            fireIntervalAdded(this, 0, arrayValues.size() - 1);
        }

        @Override
        public int getSize() {
            return arrayValues.size();
        }

        public ArrayList<String> getValues() {
            return this.arrayValues;
        }

        @Override
        public void removeElementAt(int index) {
            arrayValues.remove(index);
            fireContentsChanged(this, index, arrayValues.size() - 1);
        }

        public void addElement(String element) {
            arrayValues.add(element);
            fireContentsChanged(this, 0, arrayValues.size() - 1);
        }

        public void editElement(String element, int index) {
            arrayValues.set(index, element);
            fireContentsChanged(this, index, arrayValues.size() - 1);
        }

        public boolean moveUp(int currentIndex) {
            String value = arrayValues.get(currentIndex);
            boolean retVal = false;
            if (currentIndex > 0) {
                String tempValue = arrayValues.get(currentIndex - 1);
                arrayValues.set(currentIndex - 1, value);
                arrayValues.set(currentIndex, tempValue);
                this.fireContentsChanged(this, currentIndex - 1, currentIndex);
                retVal = true;
            }
            return retVal;
        }

        public boolean moveDown(int currentIndex) {
            String value = arrayValues.get(currentIndex);
            boolean retVal = false;
            if (currentIndex < arrayValues.size() - 1) {
                String tempValue = arrayValues.get(currentIndex + 1);
                arrayValues.set(currentIndex + 1, value);
                arrayValues.set(currentIndex, tempValue);
                this.fireContentsChanged(this, currentIndex, currentIndex + 1);
                retVal = true;
            }
            return retVal;
        }

        @Override
        public Object getElementAt(int index) {
            return arrayValues.get(index);
        }

        public void setSelectedItem(Object anItem) {
            for (int i = 0; i < arrayValues.size(); i++) {
                if (arrayValues.get(i).equals(anItem.toString())) {
                    selectedIndex = i;
                }
            }
        }

        public Object getSelectedItem() {
            return this.getElementAt(selectedIndex);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton moveDownBtn;
    private javax.swing.JButton moveUpBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JList valueList;
    private javax.swing.JTextField valueTxt;
    // End of variables declaration//GEN-END:variables

}
