/*
 * ListBranchAccessPanel.java
 *
 * Created on September 5, 2005, 4:25 PM
 */

package rmischedule.xadmin;
import schedfoxlib.model.util.Record_Set;
import rmischedule.components.*;
import rmischeduleserver.data_connection_types.*;
import rmischeduleserver.mysqlconnectivity.queries.*;
import rmischeduleserver.mysqlconnectivity.queries.util.*;

import java.util.*;
import javax.swing.*;
/**
 *
 * @author  Owner
 */
public class ListCompanyAccessPanel extends javax.swing.JPanel implements UserPanelInterface {
    
    private List_View myCompanyListView;
    private String uid;
    
    /** Creates new form ListBranchAccessPanel */
    public ListCompanyAccessPanel(xUserDetail myPar) {
        initComponents();
        uid = "0";
        myCompanyListView = new List_View();
        myCompanyListView.addColumn("id", List_View.STRING, false, false);
        myCompanyListView.addColumn("companyid", List_View.STRING, false, false);
        myCompanyListView.addColumn("Company Name", List_View.STRING, false, true);
        myCompanyListView.addColumn("Has Access?", List_View.BOOLEAN, true, true);
        myCompanyListView.buildTable();
        myCompanyListView.maximizeTable();
        add(myCompanyListView.myScrollPane);
        myPar.registerListView(myCompanyListView);
    }
    
    /**
     * Returns Query, as defined in the interface UserPanelInterface...
     */
    public GeneralQueryFormat getQuery(String manageId, String userId) {
        uid = userId;
        get_user_company_security_query myQuery = new get_user_company_security_query();
        myQuery.update(userId, manageId);
        return myQuery;
    }
    
    public void setData(Record_Set rs) {
        myCompanyListView.clearRows();
        for (int i = 0; i < rs.length(); i++) {
            myCompanyListView.addRow(rs);
            rs.moveNext();
        }
        myCompanyListView.fireTableDataChanged();
    }
    
    public String getTitleOfTab() {
        return "Company Access";
    }
    
    public JPanel getComponent() {
        return this;
    }
    
    public GeneralQueryFormat getSaveDataQuery(Object OptionalData) {
        save_branch_comp_group_access_query myCompQuery = new save_branch_comp_group_access_query();
        ArrayList Comp = new ArrayList();
        for (int i = 0; i < myCompanyListView.getRowCount(); i++) {
            if ((Boolean) myCompanyListView.getValueAt(i, 1)) {
                Comp.add(myCompanyListView.getTrueValueAt(i, 0).toString());
            }
        }
        myCompQuery.update(uid, null, Comp, null, null);
        return myCompQuery;
    }

    public List_View getListView() {
        return myCompanyListView;
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.GridLayout(1, 0));

    }
    // </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
