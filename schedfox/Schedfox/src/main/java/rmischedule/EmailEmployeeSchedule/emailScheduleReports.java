/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * emailScheduleReports.java
 *
 * Created on Jul 23, 2010, 9:23:54 AM
 */
package rmischedule.EmailEmployeeSchedule;

import java.util.Calendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import rmischeduleserver.util.StaticDateTimeFunctions;
import rmischedule.data_connection.Connection;
import rmischedule.main.Main_Window;
import rmischedule.xprint.components.GetDatesForPrintDialog;

/**
 *
 * @author vnguyen
 */
public class emailScheduleReports extends javax.swing.JInternalFrame {

    Main_Window myParent;
    String branchId;
    String companyId;
    Connection myConn = new Connection();

    /** Creates new form emailScheduleReports */
    public emailScheduleReports() {
        initComponents();
    }

    public emailScheduleReports(String branchId, String companyId, Main_Window parentOfApplication) {
        initComponents();
        this.myParent = parentOfApplication;
        this.branchId = branchId;
        this.companyId = companyId;
        this.myConn.setCompany(companyId);
        this.myConn.setBranch(branchId);
        Integer companyInt = Integer.parseInt(companyId);
        Calendar[] getDates = new GetDatesForPrintDialog(this.myParent, true).getDatesFromDialog(companyInt);
        //  0 - index is start date in calender form
        // 1 - index is end date in calender form
        String start = StaticDateTimeFunctions.convertCalendarToDatabaseFormat(getDates[0]);
        String end = StaticDateTimeFunctions.convertCalendarToDatabaseFormat(getDates[1]);
        System.out.println("Start: " + start);
        System.out.println("end: " + end);
        PrintEmployees printer = new PrintEmployees(this.branchId, companyId, start, end, getDates[0], getDates[1], this.myConn);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 282, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
