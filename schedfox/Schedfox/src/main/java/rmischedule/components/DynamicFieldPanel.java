/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DynamicFieldPanel.java
 *
 * Created on Aug 16, 2010, 11:06:47 AM
 */
package rmischedule.components;

import rmischedule.components.graphicalcomponents.GenericTabbedEditForm;
import rmischedule.xadmin.model.DynamicFieldValue;

/**
 *
 * @author user
 */
public class DynamicFieldPanel extends javax.swing.JPanel {

    private DynamicFieldValue dynamicFieldValue;
    private DynamicFieldTypeInterface fieldTypePanel;
    private boolean enabled;
    private GenericTabbedEditForm myParent;

    /** Creates new form DynamicFieldPanel */
    public DynamicFieldPanel(DynamicFieldValue fieldDef, GenericTabbedEditForm myParent) {
        this.myParent = myParent;
        this.dynamicFieldValue = fieldDef;
        this.enabled = true;
        init();
    }

    public DynamicFieldPanel(DynamicFieldValue fieldDef, boolean isEnabled) {
        this.dynamicFieldValue = fieldDef;
        this.enabled = isEnabled;
        init();
        
    }

    private void init() {
        initComponents();
        fieldTypePanel = this.getComponent();
        
        fieldTypePanel.getComponent().setMaximumSize(new java.awt.Dimension(50000, 26));
        
        this.jFieldPanel.add(fieldTypePanel.getComponent());
        
        this.setValues();
    }

    public DynamicFieldTypeInterface getComponent() {
        DynamicFieldTypeInterface retVal = null;
            if (dynamicFieldValue.getFieldDefObj().getFieldTypeId() == 1) {
                //Number
                retVal = new DynamicFieldNumberType(enabled);
            } else if (dynamicFieldValue.getFieldDefObj().getFieldTypeId() == 2) {
                //Money
                retVal = new DynamicFieldMoneyType(enabled);
            } else if (dynamicFieldValue.getFieldDefObj().getFieldTypeId() == 3) {
                //Date
                retVal = new DynamicFieldDateType(enabled);
            } else if (dynamicFieldValue.getFieldDefObj().getFieldTypeId() == 4) {
                //Text
                retVal = new DynamicFieldTextType(enabled);
            } else if (dynamicFieldValue.getFieldDefObj().getFieldTypeId() == 5) {
                //Boolean
                retVal = new DynamicFieldBooleanType(enabled);
            } else if (dynamicFieldValue.getFieldDefObj().getFieldTypeId() == 6) {
                //Boolean
                retVal = new DynamicFieldBooleanAndDateType(enabled);
            } else if (dynamicFieldValue.getFieldDefObj().getFieldTypeId() == 7) {
                //Combo box.
                retVal = new DynamicFieldComboType(enabled);
            } else if (dynamicFieldValue.getFieldDefObj().getFieldTypeId() == 8) {
                //  additional files
                retVal = new DynamicFieldAdditionalFileType(enabled, myParent);
            } else {
                //Default is text
                retVal = new DynamicFieldTextType(enabled);
            }
        return retVal;
    }

    public void setValues() {
        this.jNameLabel.setText(dynamicFieldValue.getFieldDefObj().getName());
        fieldTypePanel.setValue(dynamicFieldValue);
    }

    public DynamicFieldValue getDynamicFieldValue() {
        this.dynamicFieldValue.setDynamic_field_value(fieldTypePanel.getValue());
        return this.dynamicFieldValue;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jNameLabel = new javax.swing.JLabel();
        jFieldPanel = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 5, 2, 5));
        setMaximumSize(new java.awt.Dimension(1200, 30));
        setMinimumSize(new java.awt.Dimension(40, 30));
        setPreferredSize(new java.awt.Dimension(150, 30));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jNameLabel.setText("jNameLabel");
        jNameLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jNameLabel.setMaximumSize(new java.awt.Dimension(140, 14));
        jNameLabel.setMinimumSize(new java.awt.Dimension(140, 16));
        jNameLabel.setPreferredSize(new java.awt.Dimension(140, 14));
        add(jNameLabel);

        jFieldPanel.setPreferredSize(new java.awt.Dimension(250, 100));
        jFieldPanel.setLayout(new java.awt.BorderLayout());
        add(jFieldPanel);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jFieldPanel;
    private javax.swing.JLabel jNameLabel;
    // End of variables declaration//GEN-END:variables
}
