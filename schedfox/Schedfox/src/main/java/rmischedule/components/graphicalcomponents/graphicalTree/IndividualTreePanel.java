/*
 * IndividualTreePanel.java
 *
 * Created on November 22, 2005, 8:12 AM
 */

package rmischedule.components.graphicalcomponents.graphicalTree;
import java.util.*;
import java.awt.*;
import javax.swing.border.*;
import rmischedule.main.*;
/**
 *
 * @author  Ira Juneau
 */
public class IndividualTreePanel extends javax.swing.JPanel {
    
    private Vector<TreeVectorClass> mySubList;
    private TreeVectorClass currClass;
    private boolean isShowingSubList;
    
    private static final int mySize = 22;
    
    /** Creates new form IndividualTreePanel */
    public IndividualTreePanel(TreeVectorClass myList) {
        initComponents();
        mySubList =  myList.getMyList();
        isShowingSubList = true;
        if (myList.hasList()) {
           for (int i = 0; i < mySubList.size(); i++) {
               ComponentPanel.add(new IndividualTreePanel(mySubList.get(i)));
           }
        } else {
            setBorder(null);
        }
        NameLabel.setText(myList.getDisplayName());
        currClass = myList;
        myList.setIconPanel(IconLabel);
        showOrHideList();
    }
    
    private void showOrHideList() {
        int size = 1;
        if (mySubList != null) {
            size = mySubList.size() + 1;
        } else {
            try {
                currClass.runOnClick();
            } catch (Exception e) {}
        }
        if (!isShowingSubList) {
            setPreferredSize(new Dimension(200, size * mySize));
            setMinimumSize(new Dimension(0, size * mySize));
            setMaximumSize(new Dimension(2000, size * mySize));
            if (size > 1) {
                ToggleSubTreeLabel.setIcon(Main_Window.parentOfApplication.NavUp16x16_Icon);
            }
        } else {
            setPreferredSize(new Dimension(200, mySize));
            setMinimumSize(new Dimension(0, mySize));
            setMaximumSize(new Dimension(2000, mySize));
            if (size > 1) {
                ToggleSubTreeLabel.setIcon(Main_Window.parentOfApplication.NavDown16x16_Icon);
            }
        }
        revalidate();
        doLayout();
        isShowingSubList = !isShowingSubList;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        IconLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        ToggleSubTreeLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        ComponentPanel = new javax.swing.JPanel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.X_AXIS));

        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 22));
        jPanel1.setMinimumSize(new java.awt.Dimension(10, 22));
        jPanel1.setPreferredSize(new java.awt.Dimension(10, 22));
        IconLabel.setMaximumSize(new java.awt.Dimension(22, 22));
        IconLabel.setMinimumSize(new java.awt.Dimension(22, 22));
        IconLabel.setPreferredSize(new java.awt.Dimension(22, 22));
        IconLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedIcon(evt);
            }
        });

        jPanel1.add(IconLabel);

        NameLabel.setMaximumSize(new java.awt.Dimension(5000, 5000));
        NameLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ShowOrHideSubTree(evt);
            }
        });

        jPanel1.add(NameLabel);

        ToggleSubTreeLabel.setMaximumSize(new java.awt.Dimension(22, 22));
        ToggleSubTreeLabel.setMinimumSize(new java.awt.Dimension(22, 22));
        ToggleSubTreeLabel.setPreferredSize(new java.awt.Dimension(22, 22));
        ToggleSubTreeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ShowOrHideSubTree(evt);
            }
        });

        jPanel1.add(ToggleSubTreeLabel);

        add(jPanel1);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));

        jPanel2.setMinimumSize(new java.awt.Dimension(30, 0));
        jPanel2.setPreferredSize(new java.awt.Dimension(30, 0));
        jPanel3.setMaximumSize(new java.awt.Dimension(20, 32767));
        jPanel3.setMinimumSize(new java.awt.Dimension(20, 10));
        jPanel3.setPreferredSize(new java.awt.Dimension(20, 10));
        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.GridLayout());

        ComponentPanel.setLayout(new javax.swing.BoxLayout(ComponentPanel, javax.swing.BoxLayout.Y_AXIS));

        jPanel4.add(ComponentPanel);

        jPanel2.add(jPanel4);

        add(jPanel2);

    }
    // </editor-fold>//GEN-END:initComponents

    private void clickedIcon(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickedIcon
        currClass.runOnClick();
    }//GEN-LAST:event_clickedIcon

    private void ShowOrHideSubTree(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShowOrHideSubTree
        showOrHideList();
    }//GEN-LAST:event_ShowOrHideSubTree
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ComponentPanel;
    private javax.swing.JLabel IconLabel;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JLabel ToggleSubTreeLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
    
}
