/*
 * SmallComboBox.java
 *
 * Created on January 9, 2006, 11:56 AM
 */

package rmischedule.components.graphicalcomponents;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.event.*;
import rmischedule.components.*;
import java.util.*;
import rmischedule.schedule.components.*;
import rmischedule.main.*;
/**
 *
 * @author  Ira Juneau
 */
public class SmallComboBox extends javax.swing.JPanel {
    
    //private Color foregroundColor = new Color(158, 58, 96);
    private Color foregroundColor = new Color(255,255,255);
    
    /** Creates new form SmallComboBox */
    public SmallComboBox() {
        initComponents();
        myComboBox.setFont(Main_Window.parentOfApplication.employee_font);
    }
    
    public void setEnabled(boolean b) {
        super.setEnabled(b);
        myComboBox.setEnabled(b);
    }
    
    /**
     * Used to add a String[] to the combobox contained in this control
     */
    public void addItems(String[] items) {
        for (int i = 0; i < items.length; i++) {
            myComboBox.addItem(items[i]);
        }
    }
    
    /**
     * Used to add a String to the combobox contained in this control.
     */
    public void addItem(String item) {
        myComboBox.addItem(item);
    }
    
    /**
     * Adds a popupMenuListener to the combobox contained in this control
     */
    public void addPopupMenuListener(PopupMenuListener pml) {
        myComboBox.addPopupMenuListener(pml);
    }
    
    /**
     * Adds a actionlistener to the combo box contained in this control.
     */
    public void addActionListener(ActionListener al) {
        myComboBox.addActionListener(al);
    }
    
    /**
     * Removes all objects from the combo box...
     */
    public void clearMyComboBox() {
        myComboBox.removeAllItems();
    }
    
    /**
     * Used to add a Vector to the combobox contained in this control
     */
    public void addItems(Vector items) {
        for (int i = 0; i < items.size(); i++) {
            myComboBox.addItem(items.get(i));
        }
    }
    
    /**
     * Used to add a Object[] to the combobox contained in this control
     */
    public void addItems(Object[] items) {
        for (int i = 0; i < items.length; i++) {
            myComboBox.addItem(items[i]);
        }
    }
    
    public void setText(String myText) {
        header.setText(myText);
    }
    
    /**
     * Self explainatory...kinda
     */
    public void setIndexOfCombo(int myIndex) {
        try {
            if (myComboBox.getSelectedIndex() != myIndex) {
                myComboBox.setSelectedIndex(myIndex);
            }
        } catch (Exception e) {
        }
    }
    
    public Object getSelectedItem() {
        return myComboBox.getSelectedItem();
    }
    
    public class smallComboBoxRenderer extends JLabel implements ListCellRenderer {
        public smallComboBoxRenderer() {
            
        }
        
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            try {
                setText((String)value);
                setBackground(new Color(255,255,255));
            } catch (Exception e) {
                if (value instanceof SEmployee) {
                    setText(((SEmployee)value).getName());
                } else if (value instanceof SClient) {
                    setText(((SClient)value).getClientName());
                } else if (value instanceof STimeOff) {
                    setText(((STimeOff)value).getClientName());
                }
            }
            if (isSelected) {
                setForeground(Color.BLACK);
            } else {
                setForeground(Color.BLACK);
            }
            return this;
        }
    }
    
    public static void main(String args[]) {
        JFrame myFrame = new JFrame();
        myFrame.setLayout(new GridLayout(1,1));
        myFrame.add(new SmallComboBox());
        myFrame.setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        header = new javax.swing.JLabel();
        myComboBox = new javax.swing.JComboBox();

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBackground(new java.awt.Color(168, 182, 214));
        jPanel1.setOpaque(false);
        header.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 10));
        header.setText("Client Header");
        jPanel1.add(header);

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));

        setMaximumSize(new java.awt.Dimension(32767, 200));
        setOpaque(false);
        myComboBox.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 12));
        myComboBox.setMaximumRowCount(10);
        myComboBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        myComboBox.setMaximumSize(new java.awt.Dimension(32767, 20));
        myComboBox.setMinimumSize(new java.awt.Dimension(23, 20));
        myComboBox.setPreferredSize(new java.awt.Dimension(5000, 20));
        myComboBox.setRenderer(new smallComboBoxRenderer());
        myComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                resizeComboForKeys(evt);
            }
        });
        myComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resizeComboForMouse(evt);
            }
        });

        add(myComboBox);

    }// </editor-fold>//GEN-END:initComponents

    private void resizeComboForKeys(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_resizeComboForKeys
        //myComboBox.setMaximumRowCount(10);
    }//GEN-LAST:event_resizeComboForKeys

    private void resizeComboForMouse(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resizeComboForMouse
        //myComboBox.setMaximumRowCount(30);
    }//GEN-LAST:event_resizeComboForMouse
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel header;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox myComboBox;
    // End of variables declaration//GEN-END:variables
    
}
