/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Full_Size_Image_Container.java
 *
 * Created on Sep 20, 2010, 11:10:09 AM
 */
package rmischedule.components;

import java.awt.Cursor;
import java.awt.Image;
import java.awt.Rectangle;
import java.math.BigDecimal;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import schedfoxlib.model.util.ImageLoader;

/**
 *
 * @author jdavis
 */
public class Full_Size_Image_Container extends javax.swing.JInternalFrame {

    //  private variable declarations
    ImageIcon icon;

    /** Creates new form Full_Size_Image_Container */
    public Full_Size_Image_Container() {
        initComponents();
    }

    public void setImage(Image image) {
        //  get all sizes
        boolean doesFit = false;
        Image scaledImage = null;
        icon = new ImageIcon();
        Rectangle myBounds = this.getBounds();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        int imageWidth = image.getWidth(this);
        int imageHeight = image.getHeight(this);
        int absoluteScreenSizeWidth = screenSize.width;
        int absoluteScreenSizeHeight = screenSize.height;
        double scaledScreenSizeWidth = absoluteScreenSizeWidth * .625;
        double scaledScreenSizeHeight = absoluteScreenSizeHeight * .625;

        //  check to ensure image fits
        if (imageWidth > scaledScreenSizeWidth || imageHeight > scaledScreenSizeHeight) {
            final BigDecimal percentageIteration = new BigDecimal(".1");
            final BigDecimal zero = new BigDecimal("0");
            BigDecimal percentage = new BigDecimal("1.0");
            int scaledImageHeight = 0;
            int scaledImageWidth = 0;
            while (!doesFit && (percentage.compareTo(zero) > 0)) {
                scaledImageHeight = (int) (imageHeight * percentage.doubleValue());
                scaledImageWidth = (int) (imageWidth * percentage.doubleValue());

                if (scaledImageHeight < scaledScreenSizeWidth && scaledImageWidth < scaledScreenSizeHeight) {
                    doesFit = true;
                } else {
                    percentage = percentage.subtract(percentageIteration);
                }
            }

            if (doesFit) {
                scaledImage = image.getScaledInstance(scaledImageWidth, scaledImageHeight, Image.SCALE_SMOOTH);
            }

            icon.setImage(ImageLoader.toBufferedImage(scaledImage));
        } else {
            scaledImage = image;
            doesFit = true;
            icon.setImage(ImageLoader.toBufferedImage(scaledImage));
        }

        if (doesFit) {
            this.jImageLabel.setIcon(icon);

            if (myBounds.width < icon.getIconWidth() || myBounds.height < icon.getIconHeight()) {
                int myY = (screenSize.height - icon.getIconHeight() + 40) / 2;
                if (myY < 10) {
                    myY = 10;
                }

                setBounds((screenSize.width - icon.getIconWidth() + 40) / 2, myY, icon.getIconWidth() + 40,
                        icon.getIconHeight() + 40);
            }
        } else {
            JOptionPane.showMessageDialog(this, "There was an error displaying the image.  Please contact SchedFox administrators.",
                    "Error Displaying Image", JOptionPane.ERROR_MESSAGE);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jContainerPanel = new javax.swing.JPanel();
        jImageLabel = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setMaximizable(true);
        setResizable(true);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jContainerPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jContainerPanel.add(jImageLabel, gridBagConstraints);

        getContentPane().add(jContainerPanel);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-590)/2, (screenSize.height-381)/2, 590, 381);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jContainerPanel;
    private javax.swing.JLabel jImageLabel;
    // End of variables declaration//GEN-END:variables
}
